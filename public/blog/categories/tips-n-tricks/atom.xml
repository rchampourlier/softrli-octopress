<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips'n'tricks | softr.li]]></title>
  <link href="http://www.softr.li/blog/categories/tips-n-tricks/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-05-08T12:30:44+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup automatic clearing of your Rails sessions]]></title>
    <link href="http://www.softr.li/blog/2012/04/20/setup-automatic-clearing-of-your-rails-sessions/"/>
    <updated>2012-04-20T10:12:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/20/setup-automatic-clearing-of-your-rails-sessions</id>
    <content type="html"><![CDATA[<p>With every connection to your application of a new user, bot or whatever, Rails will create a new session object.</p>

<p>If you're using <a href="http://api.rubyonrails.org/classes/ActiveRecord/SessionStore.html">ActiveRecord::SessionStore</a> to save your sessions in your database, your database may already be alarmingly growing in size, due to the number of sessions it contains.</p>

<h2>The rake db:sessions:clear task</h2>

<p>If you don't mind a lot about your users lossing their session, you can simply use the provided <code>rake db:sessions:clear</code> task. It will simply delete all sessions in the database. Side-effect: all current sessions are deleted, so signed in users get signed out, and you should hope they had nothing under way!</p>

<h2>A more user-friendly solution</h2>

<h2>References</h2>

<ul>
<li><a href="http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions">http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple cheatsheet for git submodules]]></title>
    <link href="http://www.softr.li/blog/2012/04/14/simple-cheatsheet-for-git-submodules/"/>
    <updated>2012-04-14T10:01:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/14/simple-cheatsheet-for-git-submodules</id>
    <content type="html"><![CDATA[<h2>Steps</h2>

<ol>
<li>Add the submodule using a <code>git submodule add...</code> command (see below for the different options).</li>
<li>Run <code>git submodule init</code>.</li>
</ol>


<h2>Local submodules</h2>

<p><code>
git submodule add "/absolute/path/to/the/submodule/repository" local/path/for/the/submodule
</code></p>

<p>To perform operations on the submodule, go in its folder. From then you can make commits and push them to the 'remote' repository.</p>

<h2>Remote submodules</h2>

<p>Add a remote submodule, include external project and track updates</p>

<pre><code>git submodule add https://path_to_the_git_repository.git ./local_path_to_the_submodule_directory
</code></pre>
]]></content>
  </entry>
  
</feed>
