<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: development | softr.li]]></title>
  <link href="http://www.softr.li/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-10-19T11:53:24+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cropping with live preview in Rails, using Jcrop]]></title>
    <link href="http://www.softr.li/blog/2012/10/19/image-cropping-with-live-preview-in-rails/"/>
    <updated>2012-10-19T11:50:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/10/19/image-cropping-with-live-preview-in-rails</id>
    <content type="html"><![CDATA[<p>Well, thanks to the <a href="http://railscasts.com/episodes/182-cropping-images">Jcrop Railscast</a>, I had setup <strong>avatar upload and cropping features</strong> on <a href="http://www.avdice.com">our project</a>.</p>

<p>With the major changes coming in our next release, this little feature <strong>wasn't working anymore</strong>, and I couldn't figure why my preview was working like a mess...</p>

<p>I looked into the code, which matches the <a href="http://deepliquid.com/projects/Jcrop/demos.php?demo=thumbnail">Jcrop's original example</a>, but I couldn't figure what was wrong! Wow, but that's a pretty simple thing, no? Just scaling and offsetting a picture, shouldn't take long to understand?!</p>

<p>Well, the code wasn't looking good enough. I'm undertaking <a href="https://www.edx.org/courses/BerkeleyX/CS169.1x/2012_Fall/about">edX SAAS course</a> so I want my code to be <em>beautiful</em>. So, let's rewrite it!</p>

<h3>The context</h3>

<ul>
<li>I want a <strong>simple cropping feature</strong>, using Paperclip just like the one setup in the Railscast, and the <strong>live preview</strong>.</li>
<li>I just need to crop to a <strong>square picture</strong>.</li>
<li>I want it to work!</li>
</ul>


<p>I won't rewrite the whole tutorial, since the Railscast is perfect to setup your model with Paperclip, add the cropper module, but the Javascript with preview was a wreck, and that's what I rewrote.</p>

<h3>The Javascript</h3>

<p>```
:javascript</p>

<p>  var previewSize = 150;
  var originalSize = {</p>

<pre><code>width: #{@user.avatar_geometry(:original).width},
height: #{@user.avatar_geometry(:original).height}
</code></pre>

<p>  };</p>

<p>  function updatePreview(coords) {</p>

<pre><code>var ratio = previewSize / coords.w;

$('#preview').css({
  width: Math.round(originalSize.width * ratio) + 'px',  
  height: Math.round(originalSize.height * ratio) + 'px',  
  marginLeft: '-' + Math.round(coords.x * ratio) + 'px',  
  marginTop: '-' + Math.round(coords.y * ratio) + 'px'  
});

$('#profile_crop_x').val(Math.floor(coords.x));  
$('#profile_crop_y').val(Math.floor(coords.y));  
$('#profile_crop_w').val(Math.floor(coords.w));  
$('#profile_crop_h').val(Math.floor(coords.h));    
</code></pre>

<p>  };</p>

<p>  $(function() {</p>

<pre><code>$('#cropbox').Jcrop({
  onChange: updatePreview,  
  onSelect: updatePreview,  
  setSelect: [0, 0, originalSize.width * 0.9, originalSize.height * 0.9],  
  aspectRatio: 1
});
</code></pre>

<p>  });
```</p>

<p>I think this version makes more sense, and in my case it works perfectly. I used some drawings to help me rewriting this, so you may find it helpful, in particular if you want something to start with if you don't just want a square target size!</p>

<p><img src="https://s3-eu-west-1.amazonaws.com/softrli/assets/2012-10-19-image-cropping-with-live-preview-in-rails-asset-1.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup development environment with Vagrant]]></title>
    <link href="http://www.softr.li/blog/2012/08/07/setup-development-environment-with-vagrant/"/>
    <updated>2012-08-07T21:00:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/08/07/setup-development-environment-with-vagrant</id>
    <content type="html"><![CDATA[<h3>Install Vagrant</h3>

<p>First, we want to install Vagrant on our development machine. Go to <a href="http://vagrantup.com/">the Vagrant website</a> and download the latest binaries for your OS. If there is no binary package available, you can install it through Rubygems using <code>gem install vagrant</code>, but Vagrant's guide tells us binaries are the best choice.</p>

<h3>Download your first Vagrant virtual machine</h3>

<p>To build its development environments, Vagrant relies on Virtual Box virtual machines with a barebones OS installation. We will work with the common Ubuntu 10.04.3 LTS, also known as Lucid Lynx. So we have to download the corresponding Vagrant box, which is done by:</p>

<p><code>
$ vagrant box add lucid32 http://files.vagrantup.com/lucid32.box
</code></p>

<p>This box is a fully functional Ubuntu Lucid machine with 512MB of RAM. As soon as the command ends, we're ready to go on.</p>

<p><em>Note that if you are already using Vagrant and added this box before, you should already be ready for the next part.</em></p>

<h3>Configuring the project to use the Vagrant box</h3>

<p>Go to your project's directory, and run this to init Vagrant with the project:</p>

<p><code>
$ vagrant init lucid32
</code>
This will create the Vagrant's configuration file, <code>Vagrantfile</code>. The generated files contains already lots of commented commands to setup the configuration. For now, we replace this all by this:</p>

<p><code>
Vagrant::Config.run do |config|
  config.vm.box = "lucid32"
end
</code></p>

<h3>Run the Vagrant box</h3>

<p>Run <code>vagrant up</code> to setup and start the virtual machine. It can't do much for now, but it starts! If everything is good, you should see this finish message:</p>

<p><code>
[default] VM booted and ready for use!
[default] Configuring and enabling network interfaces...
[default] Mounting shared folders...
[default] -- v-root: /vagrant
</code></p>

<p>However, if the process seems to stop on <code>[default] Waiting for VM to boot. This can take a few minutes.</code> you may have the same issue I had with Vagrant not achieving to connect to the virtual machine with the default network configuration (NAT). There is <a href="https://github.com/mitchellh/vagrant/issues/455">an issue on Github</a> related to this problem. The cause of this issue is currently unclear, but on my system adding this to the <code>Vagrantfile</code> has made it work without any hickup for several months:</p>

<p>```</p>

<h1>Tries to fix issue #455</h1>

<p>  config.vm.customize ["modifyvm", :id, "--rtcuseutc", "on"]
  config.ssh.max_tries = 10
```</p>

<h3>Preparing the environment</h3>

<p>From now, the box you installed is not provisionned with any server software. To do so, the best way is to have built a set of Chef or Puppet recipes (or cookbook) that you will specify into <code>Vagrantfile</code>. Doing so, <code>vagrant up</code> will provision the required environment in one single step. We won't cover this subject in here, since it focuses on setting up Vagrant itself. If you want some help to setup Chef for example, I wrote several articles on the subject, check <a href="http://www.softr.li/blog/categories/vagrant/">the vagrant category</a>.</p>

<h3>References</h3>

<p><a href="http://docs.puppetlabs.com/puppet_core_types_cheatsheet.pdf">http://docs.puppetlabs.com/puppet_core_types_cheatsheet.pdf</a>
<a href="https://github.com/example42/puppet-modules">https://github.com/example42/puppet-modules</a>
<a href="http://www.example42.com/">http://www.example42.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running guard over Vagrant]]></title>
    <link href="http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant/"/>
    <updated>2012-07-21T18:05:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant</id>
    <content type="html"><![CDATA[<p>To keep it simple, you can't... do it properly. File events are not correctly triggered by VirtualBox on the guest when the files are updated from the host (see the related Github <a href="https://github.com/guard/listen/issues/53">issue</a>). So <strong>guard cannot detect the events issued by the host</strong>... unless you run it with the polling option:</p>

<p><code>
vagrant -p
</code></p>

<p>This polling option works correctly on the latest versions of VirtualBox (there was an <a href="https://github.com/guard/guard/issues/269">issue</a> before 4.1.12), but it remains a bad option because doing so my <strong>system's CPU instantly goes to a constant 100% charge</strong>.</p>

<p>To <strong>improve the situation</strong>, you can still <strong>reduce the latency</strong> so that the polling is not done so frequently. This naturally adds some delay before the triggering of the events, but it will keep your system cool.</p>

<p><code>
guard -p -l 10
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faster Sinatra development with guard-shotgun]]></title>
    <link href="http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun/"/>
    <updated>2012-07-15T18:20:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun</id>
    <content type="html"><![CDATA[<p><a href="http://www.sinatrarb.com/">Sinatra</a> is a really nice way to <strong>bootstrap projects</strong>. It allows to <strong>start really fast</strong>, and is really suited for <strong>API-based</strong> projects (may be a good choice for your next mobile-or-web-app backend).</p>

<p>Unlike Ruby on Rails however, Sinatra does not reload your code with each request, so you have to restart the server each time your code changes. To help you with this burden, there is a small tool called <a href="https://github.com/rtomayko/shotgun">Shotgun</a>.</p>

<p>I've used it but I rapidly faced a <a href="https://github.com/rtomayko/shotgun/issues/34">logging issue</a> making it useless.</p>

<p>Since I was using <strong>the excellent <a href="https://github.com/guard/guard/">Guard</a></strong>, and I had already seen a similar reloading module for Webrick, I just decided to code <a href="https://github.com/rchampourlier/guard-shotgun">guard-shotgun</a>. It's a fairly simple <strong>plugin for Guard</strong> providing the <strong>same feature as Shotgun</strong>, but using the rock-solid fundation provided by Guard!</p>

<p>Feel free to use, fork, and even feedback it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup automatic clearing of your Rails sessions]]></title>
    <link href="http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions/"/>
    <updated>2012-07-05T09:40:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions</id>
    <content type="html"><![CDATA[<p>With every connection to your application of a new user, bot or whatever, Rails will create a new session object.</p>

<p>If you're using <a href="http://api.rubyonrails.org/classes/ActiveRecord/SessionStore.html">ActiveRecord::SessionStore</a> to save your sessions in your database, your database may already be alarmingly growing in size, due to the number of sessions it contains.</p>

<h3>The rake db:sessions:clear task</h3>

<p>If you don't mind a lot about your users loosing their session, you can simply use the provided <code>rake db:sessions:clear</code> task. It will simply delete all sessions in the database. Side-effect: all current sessions are deleted, so signed in users get signed out, and you should hope they had nothing under way!</p>

<h3>A more user-friendly solution</h3>

<p>Writing a simple rake task to replace the default one and only remove sessions older than 2 weeks is as easy as adding this file to your project:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lib/tasks/sessions.rake  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:sessions</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  desc &quot;Clear expired sessions (more than 2 weeks old)&quot;</span>
</span><span class='line'><span class="sr">  task :cleanup =&gt; :environment do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;DELETE FROM sessions WHERE (updated_at &amp;lt; &#39;</span><span class="si">#{</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">-</span> <span class="mi">2</span><span class="o">.</span><span class="n">weeks</span><span class="si">}</span><span class="s2">&#39;)&quot;</span>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now, if you run <code>rake sessions:cleanup</code>, only the older sessions will be removed from your database.</p>

<h3>Last but not least: automation</h3>

<p>So that you don't have to run it every day, you can setup a cron task to do it for you. Here is the line we use:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>crontab </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>m h  dom mon dow   command&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>01 3 * * * bash -l -c 'cd /home/deployer/rails/project/current; bundle exec rake sessions:cleanup'</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>References</h3>

<ul>
<li><a href="http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions">http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
