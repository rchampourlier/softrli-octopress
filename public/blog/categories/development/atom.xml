<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: development | softr.li]]></title>
  <link href="http://www.softr.li/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-07-23T15:07:46+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running guard over Vagrant]]></title>
    <link href="http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant/"/>
    <updated>2012-07-21T18:05:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant</id>
    <content type="html"><![CDATA[<p>To keep it simple, you can't... do it properly. File events are not correctly triggered by VirtualBox on the guest when the files are updated from the host (see the related Github <a href="https://github.com/guard/listen/issues/53">issue</a>). So <strong>guard cannot detect the events issued by the host</strong>... unless you run it with the polling option:</p>

<p><code>
vagrant -p
</code></p>

<p>This polling option works correctly on the latest versions of VirtualBox (there was an <a href="https://github.com/guard/guard/issues/269">issue</a> before 4.1.12), but it remains a bad option because doing so my <strong>system's CPU instantly goes to a constant 100% charge</strong>.</p>

<p>To <strong>improve the situation</strong>, you can still <strong>reduce the latency</strong> so that the polling is not done so frequently. This naturally adds some delay before the triggering of the events, but it will keep your system cool.</p>

<p><code>
guard -p -l 10
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faster Sinatra development with guard-shotgun]]></title>
    <link href="http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun/"/>
    <updated>2012-07-15T18:20:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun</id>
    <content type="html"><![CDATA[<p><a href="http://www.sinatrarb.com/">Sinatra</a> is a really nice way to <strong>bootstrap projects</strong>. It allows to <strong>start really fast</strong>, and is really suited for <strong>API-based</strong> projects (may be a good choice for your next mobile-or-web-app backend).</p>

<p>Unlike Ruby on Rails however, Sinatra does not reload your code with each request, so you have to restart the server each time your code changes. To help you with this burden, there is a small tool called <a href="https://github.com/rtomayko/shotgun">Shotgun</a>.</p>

<p>I've used it but I rapidly faced a <a href="https://github.com/rtomayko/shotgun/issues/34">logging issue</a> making it useless.</p>

<p>Since I was using <strong>the excellent <a href="https://github.com/guard/guard/">Guard</a></strong>, and I had already seen a similar reloading module for Webrick, I just decided to code <a href="https://github.com/rchampourlier/guard-shotgun">guard-shotgun</a>. It's a fairly simple <strong>plugin for Guard</strong> providing the <strong>same feature as Shotgun</strong>, but using the rock-solid fundation provided by Guard!</p>

<p>Feel free to use, fork, and even feedback it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup automatic clearing of your Rails sessions]]></title>
    <link href="http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions/"/>
    <updated>2012-07-05T09:40:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions</id>
    <content type="html"><![CDATA[<p>With every connection to your application of a new user, bot or whatever, Rails will create a new session object.</p>

<p>If you're using <a href="http://api.rubyonrails.org/classes/ActiveRecord/SessionStore.html">ActiveRecord::SessionStore</a> to save your sessions in your database, your database may already be alarmingly growing in size, due to the number of sessions it contains.</p>

<h2>The rake db:sessions:clear task</h2>

<p>If you don't mind a lot about your users loosing their session, you can simply use the provided <code>rake db:sessions:clear</code> task. It will simply delete all sessions in the database. Side-effect: all current sessions are deleted, so signed in users get signed out, and you should hope they had nothing under way!</p>

<h2>A more user-friendly solution</h2>

<p>Writing a simple rake task to replace the default one and only remove sessions older than 2 weeks is as easy as adding this file to your project:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lib/tasks/sessions.rake  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:sessions</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  desc &quot;Clear expired sessions (more than 2 weeks old)&quot;</span>
</span><span class='line'><span class="sr">  task :cleanup =&gt; :environment do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;DELETE FROM sessions WHERE (updated_at &amp;lt; &#39;</span><span class="si">#{</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">-</span> <span class="mi">2</span><span class="o">.</span><span class="n">weeks</span><span class="si">}</span><span class="s2">&#39;)&quot;</span>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now, if you run <code>rake sessions:cleanup</code>, only the older sessions will be removed from your database.</p>

<h2>Last but not least: automation</h2>

<p>So that you don't have to run it every day, you can setup a cron task to do it for you. Here is the line we use:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>crontab </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>m h  dom mon dow   command&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>01 3 * * * bash -l -c 'cd /home/deployer/rails/project/current; bundle exec rake sessions:cleanup'</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>References</h2>

<ul>
<li><a href="http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions">http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Which HTML5 Canvas Javascript library should I use?]]></title>
    <link href="http://www.softr.li/blog/2012/06/20/which-html5-canvas-javascript-library-should-i-use/"/>
    <updated>2012-06-20T12:35:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/06/20/which-html5-canvas-javascript-library-should-i-use</id>
    <content type="html"><![CDATA[<p>I'm looking for an HTML5 Canvas library which I could use to build an interactive and animated UI control. So my requirements are essentially:</p>

<ul>
<li>well <strong>documented</strong>, <strong>supported</strong> and <strong>maintained</strong> library, because I want to be able to reuse it in later projects,</li>
<li>easing the process of creating <strong>complex graphical objects</strong> (my control is going to be quite complex, a lot more than a simple button), if possible supporting groups and layers,</li>
<li>helping me with the handling of <strong>user interactions</strong>,</li>
<li>supporting <strong>touch devices</strong>,</li>
<li>providing tools for <strong>animating</strong> the graphical content.</li>
</ul>


<p>I've searched for the appropriate library, so I will share with you the results of my search. After a list of most of the available libraries, I investigated the following shortlist of libraries: <strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> and <strong>Kinetic.js</strong>. I hope this can help you with your own choice!</p>

<!-- more -->


<h3>Found libraries</h3>

<p>Here is the list of what seems to be the main still-maintained Canvas libraries.</p>

<ul>
<li><a href="https://github.com/hyperandroid/CAAT">CAAT</a></li>
<li><a href="http://www.createjs.com/#!/EaselJS">EaselJS</a></li>
<li><a href="http://fabricjs.com/">Fabric.js</a></li>
<li><a href="http://guryjs.org/">Gury</a></li>
<li><a href="http://jcscript.com/">JcanvaScript</a></li>
<li><a href="http://www.kineticjs.com/">Kinetic.js</a></li>
<li><a href="http://ocanvas.org/">oCanvas</a></li>
<li><a href="http://paperjs.org/">Paper.js</a></li>
<li><a href="http://processingjs.org/">processing.js</a></li>
</ul>


<p>Here are some other libraries I have not investigated, either because they weren't on Github or seemed abandoned:</p>

<ul>
<li><a href="http://code.google.com/p/cakejs/">cakejs</a></li>
<li><a href="https://github.com/lamberta/doodle-js">Doodle-js</a></li>
<li><a href="https://canvastoolkit.codeplex.com/">CanvasToolkit</a></li>
<li><a href="http://mootools.net/forge/p/mootools_canvas_lib">Mootools Canvas lib</a></li>
</ul>


<h3>The Github comparison</h3>

<table>
<thead>
<tr>
<th>Library       </th>
<th> Watch </th>
<th> Fork </th>
<th> Issues</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> 336   </td>
<td> 42   </td>
<td> 17</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> 1,440 </td>
<td> 203  </td>
<td> 90    </td>
</tr>
<tr>
<td>fabric.js     </td>
<td> 1,059 </td>
<td> 101  </td>
<td> 38    </td>
</tr>
<tr>
<td>gury          </td>
<td> 348   </td>
<td> 19   </td>
<td> 9     </td>
</tr>
<tr>
<td>jCanvaScript  </td>
<td> 80    </td>
<td> 5    </td>
<td> 2     </td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> 267   </td>
<td> 41   </td>
<td> 7    </td>
</tr>
<tr>
<td>oCanvas       </td>
<td> 194   </td>
<td> 20   </td>
<td> 6 </td>
</tr>
<tr>
<td>Paper.js      </td>
<td> 1,706 </td>
<td> 111  </td>
<td> 30</td>
</tr>
<tr>
<td>processing.js </td>
<td> 1,276 </td>
<td> 206  </td>
<td> N/A</td>
</tr>
</tbody>
</table>


<h3>The minified size comparison</h3>

<table>
<thead>
<tr>
<th>Library       </th>
<th> Size (kb)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> 210</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> 44</td>
</tr>
<tr>
<td>fabric.js     </td>
<td> 133</td>
</tr>
<tr>
<td>gury          </td>
<td> 11</td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> 53</td>
</tr>
<tr>
<td>oCanvas       </td>
<td> 18</td>
</tr>
</tbody>
</table>


<p><em>No minified version was available in the Github repo for jCanvaScript, Paper.js and processing.js.</em></p>

<h3>The Stackoverflow comparison</h3>

<table>
<thead>
<tr>
<th>Search text   </th>
<th> Tag           </th>
<th> # tagged questions </th>
<th> # search questions</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 5</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> easeljs       </td>
<td> 30                 </td>
<td> 79</td>
</tr>
<tr>
<td>fabric.js     </td>
<td> fabricjs      </td>
<td> 43                 </td>
<td> 78</td>
</tr>
<tr>
<td>jCanvaScript  </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 6</td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> kineticjs     </td>
<td> 74                 </td>
<td> 30</td>
</tr>
<tr>
<td>oCanvas       </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 19</td>
</tr>
<tr>
<td>Paper.js      </td>
<td> paperjs       </td>
<td> 9                  </td>
<td> 49</td>
</tr>
<tr>
<td>processing.js </td>
<td> processing.js </td>
<td> 117                </td>
<td> 289 </td>
</tr>
</tbody>
</table>


<p><em>The gury library could not be found on StackOverflow. I've used N/A when I couldn't find a matching tag.</em></p>

<h3>Review from documentation, tutorials and other resources</h3>

<p>When choosing a framework, I value most the Github comparison. It provides a good overview of the development state of the library and the community using it. Since I'm generally not going to an expert level in a given field, I like being able to rely on the community.</p>

<p>But StackOverflow (SO) is really helpful, in particular when the comparison question has already been asked. Check this: <a href="http://stackoverflow.com/questions/8938969/current-state-of-javascript-canvas-libraries2012">Current state of Javascript canvas libraries</a></p>

<p>As a consequence, I will give a deeper review on documentation, tutorials and other resources for <strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> and the outsider, <strong>Kinetic.js</strong> to make a choice.</p>

<h4>Summary</h4>

<p><strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> can be seen as the 4 leaders. They have definitely the biggest communities of users, are available on Github, well documented, lots of external references (questions on SO, forums), and a good thing, according the the previous SO question, they are unit-tested.</p>

<p><strong>Kinetic.js</strong> is the outsider. Added more recently on Github, it's still quite dynamic but received a warm welcome from <a href="http://stackoverflow.com/users/130652/kangax">kangax</a>, the author of Fabric.js, in a SO comment.</p>

<p>These 4 libraries are all available on Github, and released under the permissive MIT license.</p>

<h4>EaselJS</h4>

<p>This library is <strong>part of the CreateJS suite</strong> which is a full-featured set of libraries to build advanced HTML5 interactive and animated graphics.</p>

<p>In particular, combined with the animation library (TweenJS), complex animations should be buildable. You also get the SoundJS library and the asset preloading library (PreloadJS) so you should have everything you need if you intend to build a game.</p>

<p>The website provides some nice demos whose source code is available within the Github repository.</p>

<p>The library also seems to work well with other libraries such as Box2d and TexturePacker.</p>

<p><strong>Support of touch devices is built in.</strong></p>

<h4>fabric.js</h4>

<p>Looking at the <a href="http://fabricjs.com/">home page</a>, it seems this library is more oriented on building <strong>vector edition tools</strong>. The main features are:</p>

<ul>
<li>create and manipulate (move, scale, rotate...) vector shapes and text objects,</li>
<li>import/export from/to SVG.</li>
</ul>


<p>It's summarized as <em>"an interactive object model on top of canvas element"</em>.</p>

<p><strong>If your goal is to build complex scenes, animate objects, it seems to me it's not the right choice.</strong></p>

<h4>Paper.js</h4>

<p>This library is a port from the Scriptographer library. A particularity is it's Paperscript language, which is basically an extended Javascript providing some mathematical operations on point and size objects. However it's still <a href="http://paperjs.org/tutorials/getting-started/paperscript-interoperability/">not documented</a>.</p>

<p>This library seems powerful in its capacity to build complex vector objects and managing mouse interactions. However, there is no mention of touch devices support, and the animation capability seems to be limited to the <code>onFrame()</code> method which is called 60 times per second and allows you to change the content of the canvas.</p>

<h4>processing.js</h4>

<p>The core goal of this library is to build <strong>interactive visualizations</strong>.</p>

<p>This library has a particulary history since it's a port of the famous Processing library. I say famous, not because I knew it myself, but because it's said to be famous among the multimedia and art community which uses it to build <strong>interactive artistic creations</strong>.</p>

<p>Looking at the <a href="http://processingjs.org/learning/">first code example</a>, it seems that this library intends to lower the learning curve for building animated and interactive graphics with the Canvas. It provides the tools to easily have a run loop and a <code>draw()</code> method you simply fill to build your visualization.</p>

<p>I think it thus provide a <strong>low learning-curve</strong>, perfect for <strong>non-developers artists and creative people</strong>, but is <strong>not the best-suited tool for building object-oriented components</strong>.</p>

<h4>Kinetic.js</h4>

<p>Kinetic.js is the outsider of this comparison because looking to its Github repo, it's far from being the most used one. However, a search on "canvas library" will return the associated HTML5 tutorials as first result, and it has a good deal of questions on StackOverflow.</p>

<p>The name is a good clue, but this library is advertised as <strong>pretty fast</strong> with lots of objects thanks to the use of multiple canvases.</p>

<p>It is provided with a <strong>nice documentation with tutorials</strong>, with an introduction on barebones HTML5 canvas use, detailed documentation on Kinetic.js and Three.js. It also provides nice tips, not specific to the library itself, to perform some actions with canvas.</p>

<h3>Result</h3>

<p>According to this review, I think I could go with one of <strong>EaselJS</strong> or <strong>Kinetic.js</strong>. <strong>Paper.js</strong> was not far but there is no mention of touch device support, so I'm pretty sure this would not be complicated to integrate, but I prefer to have something built in the library.</p>

<p>Finally, I will go with the outsider <strong>Kinetic.js</strong> because:</p>

<ul>
<li>I feel good with the example code,</li>
<li>the author provides an excellent <a href="http://www.html5canvastutorials.com/">set of tutorials</a>,</li>
<li>the documentation and examples are cleara and easy to read,</li>
<li>everything I need is included in the library (I don't feel like I may need to add another library such as <strong>TweenJS</strong> to solve a small problem while loading another large library I'm using at 20%).</li>
</ul>


<p><em>Feel free to share your comments, reviews, or missing libraries!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode failing when building for archiving because of a missing library link]]></title>
    <link href="http://www.softr.li/blog/2012/06/11/xcode-failing-when-building-for-archiving-because-of-a-missing-library-link/"/>
    <updated>2012-06-11T11:07:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/06/11/xcode-failing-when-building-for-archiving-because-of-a-missing-library-link</id>
    <content type="html"><![CDATA[<h3>The issue</h3>

<p>You may be using opensource libraries within your iOS project. (<em>If you don't, you should, it's a great time-saver. Check <a href="http://pinterest.com/rchampourlier/best-ios-controls/">here</a> for some starters.</em>)</p>

<p>As you may know, XCode may sometimes become really painful when dealing with the <strong>compilation and linking of external libraries</strong>. It may just work fine when compiling for development, but when you want it compiled for distribution, XCode may just not agree anymore.</p>

<p>I just faced such an issue this morning. This time, I met the <code>ld: library not found for...</code> error:</p>

<p><img src="/images/2012-06-11-screenshot-1.png"></p>

<!-- more -->


<p>Googling a little, I found these two StackOverflow answers, but they could not help me. You can give a try, this may still contain the answer to your own issue.</p>

<h3>The solution</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/5584317/compile-build-or-archive-problems-with-xcode-4-and-dependancies">Compile, Build or Archive problems with Xcode 4 (and dependancies)</a></li>
<li><a href="http://stackoverflow.com/questions/6004919/missing-library-link-error-when-doing-product-build-for-archiving-in-xcode-4">Missing Library link error when doing Product > Build For Archiving in Xcode 4</a></li>
</ul>


<p>I checked where the generated could be, and looking at the logs of the build process, I could find the directory's path: <code>/Users/me/Library/Developer/Xcode/DerivedData/.../</code></p>

<p>Checking the content of this directory, I discovered that my issue was that the library was indeed not build for the <code>Distribution-iphoneos</code> configuration:</p>

<p><img src="/images/2012-06-11-screenshot-2.png"></p>

<p>Correcting the issue was as simple as going to the library's project settings and adding the <code>Distribution</code> configuration:</p>

<p><img src="/images/2012-06-11-screenshot-3.png"></p>

<h3>The conclusion</h3>

<p>Be sure to check that the libraries you include within your XCode project have all the necessary configurations setup!</p>
]]></content>
  </entry>
  
</feed>
