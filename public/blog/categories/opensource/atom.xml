<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: opensource | softr.li]]></title>
  <link href="http://www.softr.li/blog/categories/opensource/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-07-15T18:26:18+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fasten Sinatra development with guard-shotgun]]></title>
    <link href="http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun/"/>
    <updated>2012-07-15T18:20:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun</id>
    <content type="html"><![CDATA[<p><a href="http://www.sinatrarb.com/">Sinatra</a> is a really nice way to <strong>bootstrap projects</strong>. It allows to <strong>start really fast</strong>, and is really suited for <strong>API-based</strong> projects (may be a good choice for your next mobile-or-web-app backend).</p>

<p>Unlike Ruby on Rails however, Sinatra does not reload your code with each request, so you have to restart the server each time your code changes. To help you with this burden, there is a small tool called <a href="https://github.com/rtomayko/shotgun">Shotgun</a>.</p>

<p>I've used it but I rapidly faced a <a href="https://github.com/rtomayko/shotgun/issues/34">logging issue</a> making it useless.</p>

<p>Since I was using <strong>the excellent <a href="https://github.com/guard/guard/">Guard</a></strong>, and I had already seen a similar reloading module for Webrick, I just decided to code <a href="https://github.com/rchampourlier/guard-shotgun">guard-shotgun</a>. It's a fairly simple <strong>plugin for Guard</strong> providing the <strong>same feature as Shotgun</strong>, but using the rock-solid fundation provided by Guard!</p>

<p>Feel free to use, fork, and even feedback it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Forked TabBarKit]]></title>
    <link href="http://www.softr.li/blog/2012/05/24/forked-tabbarkit/"/>
    <updated>2012-05-24T16:52:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/24/forked-tabbarkit</id>
    <content type="html"><![CDATA[<p>I have had to rewrite some parts of TBKTabBarController since I needed to be able to programmatically select a tab. This is normally possible by setting the <code>selectedIndex</code> or the <code>selectedViewController</code> property of the tab bar controller, but this was not working with TabBarKit.</p>

<p>I investigated and detected this behavior was not implemented, so I decided to complete it myself.</p>

<p>Along the way, I discovered there were some issues with the <code>containerView</code> being mixed up with the <code>TBKTabBarController</code>'s view, so I also corrected these bugs.</p>

<p>I've forked the repository and updated it with my corrected code, so have a look to this <a href="https://github.com/rchampourlier/TabBarKit">repo</a> if you need this.</p>

<p>Oh, I also added a <code>TBKTabBarStyleTwiceHeight</code> I use to double the size of the tab bar on iPad, so you get this for free too ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrant-stacks, a provision-on-demand tool for Vagrant!]]></title>
    <link href="http://www.softr.li/blog/2012/05/20/vagrant-stacks-a-provision-on-demand-tool-for-vagrant/"/>
    <updated>2012-05-20T09:42:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/20/vagrant-stacks-a-provision-on-demand-tool-for-vagrant</id>
    <content type="html"><![CDATA[<p><a href="http://www.vagrantup.com">Vagrant</a> is really an excellent tool for building and using virtual machines for your development environment. It <strong>ease the maintenance</strong> and allows to <strong>share the same environment within the whole team</strong>.</p>

<p>However, <strong>Vagrant itself only provides you with barebones boxes</strong>.  You still have to work for provisioning the box, <strong>which requires that you build a Chef recipe</strong> (or Puppet, but I'm using Chef so I will only refer to this one).</p>

<p><strong>Instead of using a packaged box</strong> (e.g. from <a href="[http://vagrantbox.es">vagrantbox.es</a>) which you may <strong>not trust or feal comfortable with</strong>, you can use <a href="https://github.com/rchampourlier/vagrant-stacks">this repo</a> to <strong>build and package your Vagrant box by yourself</strong>. It provides the tools and some configurations which will enable you to build a provisioned box without writing the recipe! The advantage of this approach over packaged boxes is that you can <strong>review how the box is built and provisioned</strong>. You can even refine the configurations and build new ones by forking the repo and submitting pull requests!</p>

<p>It already provides a configuration for a <strong>Ruby 1.9.2-p290 stack, managed with rbenv and Bundler, plus a PostgreSQL 8.4 database and MongoDB</strong>.</p>

<p>So feel free to <strong>try and share new configurations</strong>! Enjoy!</p>
]]></content>
  </entry>
  
</feed>
