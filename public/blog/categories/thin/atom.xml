<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: thin | softr.li]]></title>
  <link href="http://www.softr.li/blog/categories/thin/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-05-10T13:29:07+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up log rotation for your web apps]]></title>
    <link href="http://www.softr.li/blog/2012/04/20/setting-up-log-rotation-for-your-web-apps/"/>
    <updated>2012-04-20T10:12:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/20/setting-up-log-rotation-for-your-web-apps</id>
    <content type="html"><![CDATA[<p><span class='pullquote-right' data-pullquote='Just ask yourself this question: did you configure your logs rotation? '>
If, like me, you simply follow the common tutorials and walthroughs to setup your production environment, you may start wondering after some weeks <strong>where this leak on your server's disk space is coming from...</strong></p>

<p>Just ask yourself this question: did you configure your logs rotation?</p>

<p><em>(Well, that was when I was still a young CTO...)</em>
</span></p>

<!-- more -->


<h2>The ugly</h2>

<p>You've installed your <strong>nginx</strong> server, it proxies some well-coded <strong>Rails</strong> applications served by the nice-and-fast <strong>thin</strong> app server. All good.</p>

<p>But you know, these are verbose people. They like to talk. A lot. And as obedient software, they write every character of their chatter. So this is where your leak is coming from.</p>

<p>As a matter of fact, if you don't tell somebody to clean their mess, nobody won't... and you're server will soon die of low-disk-space agony.</p>

<h2>The bad</h2>

<p>You will have to tell <code>logrotate</code> to do some work for these guys to keep their chatter under control.</p>

<p><code>logrotate</code> is the cowboy which will rule the land ;) Tell it which log has to be rotated and it will automatically does the job for you. So now, get into this configuration stage...</p>

<p>The <code>logrotate</code> configuration file should be <code>/etc/logrotate.conf</code>.</p>

<p>You can add your instructions for log rotation by adding the following lines in this file, or you can create a new file under <code>/etc/logrotate.d</code> if you think this is a more organized way (I think). This latter option mimics the way packages configure <code>logrotate</code>. You will find several examples in this directory, so you may just look at them too.</p>

<p><code>
/path/to/your/rails/applicaton/log/*.log {
  daily
  missingok
  rotate 7
  compress
  delaycompress
  notifempty
  copytruncate
}
</code></p>

<p>If you want to force <code>logrotate</code> to run right now instead of waiting until tomorrow to see if your configuration is OK, you can run this command:</p>

<pre><code>/usr/sbin/logrotate -f /etc/logrotate.conf
</code></pre>

<p>Else you can just wait a little.</p>

<h2>The good</h2>

<p>If you got through all this useless blabber about bad guys chatting and cowboys, you'll be happy to know that some serious<del>ly boring</del> (no no, just kidding, I don't even know him) guy has written a far more efficient tutorial on the subject, and you can find it <a href="http://www.nullislove.com/2007/09/10/rotating-rails-log-files/">here</a>.</p>

<p>This guide will help you understand how <code>logrotate</code> works and the purpose of each line in the code above.</p>
]]></content>
  </entry>
  
</feed>
