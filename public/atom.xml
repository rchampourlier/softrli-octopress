<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[softr.li]]></title>
  <link href="http://www.softr.li/atom.xml" rel="self"/>
  <link href="http://www.softr.li/"/>
  <updated>2012-10-19T11:53:24+02:00</updated>
  <id>http://www.softr.li/</id>
  <author>
    <name><![CDATA[Romain Champourlier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cropping with live preview in Rails, using Jcrop]]></title>
    <link href="http://www.softr.li/blog/2012/10/19/image-cropping-with-live-preview-in-rails/"/>
    <updated>2012-10-19T11:50:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/10/19/image-cropping-with-live-preview-in-rails</id>
    <content type="html"><![CDATA[<p>Well, thanks to the <a href="http://railscasts.com/episodes/182-cropping-images">Jcrop Railscast</a>, I had setup <strong>avatar upload and cropping features</strong> on <a href="http://www.avdice.com">our project</a>.</p>

<p>With the major changes coming in our next release, this little feature <strong>wasn&#8217;t working anymore</strong>, and I couldn&#8217;t figure why my preview was working like a mess&#8230;</p>

<p>I looked into the code, which matches the <a href="http://deepliquid.com/projects/Jcrop/demos.php?demo=thumbnail">Jcrop&#8217;s original example</a>, but I couldn&#8217;t figure what was wrong! Wow, but that&#8217;s a pretty simple thing, no? Just scaling and offsetting a picture, shouldn&#8217;t take long to understand?!</p>

<p>Well, the code wasn&#8217;t looking good enough. I&#8217;m undertaking <a href="https://www.edx.org/courses/BerkeleyX/CS169.1x/2012_Fall/about">edX SAAS course</a> so I want my code to be <em>beautiful</em>. So, let&#8217;s rewrite it!</p>

<h3>The context</h3>

<ul>
<li>I want a <strong>simple cropping feature</strong>, using Paperclip just like the one setup in the Railscast, and the <strong>live preview</strong>.</li>
<li>I just need to crop to a <strong>square picture</strong>.</li>
<li>I want it to work!</li>
</ul>


<p>I won&#8217;t rewrite the whole tutorial, since the Railscast is perfect to setup your model with Paperclip, add the cropper module, but the Javascript with preview was a wreck, and that&#8217;s what I rewrote.</p>

<h3>The Javascript</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:javascript
</span><span class='line'>  
</span><span class='line'>  var previewSize = 150;
</span><span class='line'>  var originalSize = {
</span><span class='line'>    width: #{@user.avatar_geometry(:original).width},
</span><span class='line'>    height: #{@user.avatar_geometry(:original).height}
</span><span class='line'>  };
</span><span class='line'>
</span><span class='line'>  function updatePreview(coords) {
</span><span class='line'>    var ratio = previewSize / coords.w;
</span><span class='line'>    
</span><span class='line'>    $('#preview').css({
</span><span class='line'>      width: Math.round(originalSize.width * ratio) + 'px',  
</span><span class='line'>      height: Math.round(originalSize.height * ratio) + 'px',  
</span><span class='line'>      marginLeft: '-' + Math.round(coords.x * ratio) + 'px',  
</span><span class='line'>      marginTop: '-' + Math.round(coords.y * ratio) + 'px'  
</span><span class='line'>    });
</span><span class='line'>
</span><span class='line'>    $('#profile_crop_x').val(Math.floor(coords.x));  
</span><span class='line'>    $('#profile_crop_y').val(Math.floor(coords.y));  
</span><span class='line'>    $('#profile_crop_w').val(Math.floor(coords.w));  
</span><span class='line'>    $('#profile_crop_h').val(Math.floor(coords.h));    
</span><span class='line'>  };
</span><span class='line'>
</span><span class='line'>  $(function() {
</span><span class='line'>    $('#cropbox').Jcrop({
</span><span class='line'>      onChange: updatePreview,  
</span><span class='line'>      onSelect: updatePreview,  
</span><span class='line'>      setSelect: [0, 0, originalSize.width * 0.9, originalSize.height * 0.9],  
</span><span class='line'>      aspectRatio: 1
</span><span class='line'>    });
</span><span class='line'>  });</span></code></pre></td></tr></table></div></figure>


<p>I think this version makes more sense, and in my case it works perfectly. I used some drawings to help me rewriting this, so you may find it helpful, in particular if you want something to start with if you don&#8217;t just want a square target size!</p>

<p><img src="https://s3-eu-west-1.amazonaws.com/softrli/assets/2012-10-19-image-cropping-with-live-preview-in-rails-asset-1.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build your very own icon font]]></title>
    <link href="http://www.softr.li/blog/2012/08/08/softrli-build-own-icon-font/"/>
    <updated>2012-08-08T22:50:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/08/08/softrli-build-own-icon-font</id>
    <content type="html"><![CDATA[<p>I intend to give you <strong>the fastest road to your own icon font</strong>. How fast?</p>

<ol>
<li>You find SVG files of the icons you want in your set. Except giving you some sources to find them (which I do), I&#8217;m afraid I can&#8217;t save you this step.</li>
<li>Use the magic of <a href="http://keyamoon.com/icomoon/app">IcoMoon</a>, an HTML5 application brought to you by Keyamoon, to <strong>package all these icons in a set of fonts, CSS and JS</strong>. Once this is done, you&#8217;re ready to use your brand new custom icon font!</li>
<li>That&#8217;s true, no step 3!</li>
</ol>


<!-- more -->


<h3>Introduction</h3>

<p>There are plenty of reasons of using a custom icon font instead of sprites, if you&#8217;re still not convinced, you can do a web search, but:</p>

<ul>
<li>it&#8217;s <strong>easier to build</strong> with the tip I give you here,</li>
<li>it&#8217;s <strong>vector</strong>, so you can get your icons at <strong>whatever-size-you-want</strong>,</li>
<li>it&#8217;s <strong>less data and requests</strong> for your users (one font file for any size, any color, and it can be embedded in the CSS),</li>
<li>many more&#8230;</li>
</ul>


<p>There are <strong>plenty of icon sets available</strong> as fonts for free on the web, even apps allowing you to build custom sets from a selection of icons. However, you may have some icons on your own, and making your custom set is often the key to an homogeneous design. Here are some sources I&#8217;ve found:</p>

<object width="560" height="420" id="pt-embed-4167394-658-object" type="application/x-shockwave-flash" data="http://cdn.pearltrees.com/s/embed/getApp"><param name="flashvars" value="lang=fr_FR&amp;embedId=pt-embed-4167394-658&amp;treeId=4167394&amp;pearlId=33352719&amp;treeTitle=icons&amp;site=www.pearltrees.com%2F" /><param name="movie" value="http://cdn.pearltrees.com/s/embed/getApp" /><param name="wmode" value="opaque" /><param name="allowscriptaccess" value="always" /><a href="http://www.pearltrees.com/rchampourlier/icons/id4167394" alt="icons" style="text-decoration:underline;"><span style="font-size:14pt;color:black;font-weight:bold">icons</span><span style="font-size:10pt;color:#999999;font-weight:normal"> et icons font/set composers / misc dans dev / Romain Champourlier (rchampourlier)</span></a></object>


<p><strong>Now let&#8217;s get started!</strong></p>

<h3>Get some SVG files for your icons</h3>

<p>First you need a <strong>good set of SVG files</strong>. You can find them on the web (in the sources above for example), or build them yourself.</p>

<p>Other options may work well too, but to be sure your font looks good, you should ensure:</p>

<ul>
<li>all SVG files have the same size (I use 512x512pt),</li>
<li>the path is merged,</li>
<li>the icon is centered horizontally (I&#8217;m not quite sure what the best option for vertical alignment is, I centered and I&#8217;m fine).</li>
</ul>


<p><em>(To edit these files you can use Inkscape with is opensource.)</em></p>

<h3>IcoMoon, the magical HTML5 app for your custom icon fonts needs</h3>

<p>Well, just go <a href="http://keyamoon.com/icomoon/app">there</a>. The application is <strong>easy to use, reliable, well designed</strong>. It&#8217;s HTML5 and you can even download a JSON file to save your config. You can thus build several sets of fonts, reload them later. You can even reload a generated font to edit it. This app is <strong>awesome</strong>!</p>

<p>Once you&#8217;ve uploaded your set of icons or chosen some from the available sets, you select the ones you want in your font and click the &#8220;Font&#8221; button.</p>

<p><img src="http://www.softr.li/images/2012-08-08-screenshot1.png"></p>

<p>The last step before downloading the font is to set some options. I mostly went with the defaults, except for the &#8220;Reset Encoding&#8221;. I&#8217;m using &#8220;Private Use Area&#8221;, so that if the font can&#8217;t be load the icons don&#8217;t get replaced by random characters.</p>

<p><img src="http://www.softr.li/images/2012-08-08-screenshot2.png"></p>

<p>Finally, I set a name for my font and I use the Base64 and CSS embedding option. As such, my font is already available in the generated CSS so it makes even 1 request less for the users&#8217; browsers!</p>

<p><img src="http://www.softr.li/images/2012-08-08-screenshot3.png"></p>

<p>Now is the download time!</p>

<p>You&#8217;re getting the fonts, the CSS file providing you with the styles to use your icons. The styles are automatically based on the name of your icon files. You also get a <code>JS</code> file to help Internet Explorer 6 &amp; 7 with these icon fonts. Finally, an <code>index.html</code> file you can use to <strong>browse your icons</strong>, along with the CSS classes!</p>

<p><img src="http://www.softr.li/images/2012-08-08-screenshot4.png"></p>

<p>So, wasn&#8217;t it fast? Don&#8217;t hesitate to share if you know a fastest way!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup development environment with Vagrant]]></title>
    <link href="http://www.softr.li/blog/2012/08/07/setup-development-environment-with-vagrant/"/>
    <updated>2012-08-07T21:00:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/08/07/setup-development-environment-with-vagrant</id>
    <content type="html"><![CDATA[<h3>Install Vagrant</h3>

<p>First, we want to install Vagrant on our development machine. Go to <a href="http://vagrantup.com/">the Vagrant website</a> and download the latest binaries for your OS. If there is no binary package available, you can install it through Rubygems using <code>gem install vagrant</code>, but Vagrant&#8217;s guide tells us binaries are the best choice.</p>

<h3>Download your first Vagrant virtual machine</h3>

<p>To build its development environments, Vagrant relies on Virtual Box virtual machines with a barebones OS installation. We will work with the common Ubuntu 10.04.3 LTS, also known as Lucid Lynx. So we have to download the corresponding Vagrant box, which is done by:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant box add lucid32 http://files.vagrantup.com/lucid32.box</span></code></pre></td></tr></table></div></figure>


<p>This box is a fully functional Ubuntu Lucid machine with 512MB of RAM. As soon as the command ends, we&#8217;re ready to go on.</p>

<p><em>Note that if you are already using Vagrant and added this box before, you should already be ready for the next part.</em></p>

<h3>Configuring the project to use the Vagrant box</h3>

<p>Go to your project&#8217;s directory, and run this to init Vagrant with the project:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant init lucid32</span></code></pre></td></tr></table></div></figure>


<p>This will create the Vagrant&#8217;s configuration file, <code>Vagrantfile</code>. The generated files contains already lots of commented commands to setup the configuration. For now, we replace this all by this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Vagrant::Config.run do |config|
</span><span class='line'>  config.vm.box = "lucid32"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h3>Run the Vagrant box</h3>

<p>Run <code>vagrant up</code> to setup and start the virtual machine. It can&#8217;t do much for now, but it starts! If everything is good, you should see this finish message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[default] VM booted and ready for use!
</span><span class='line'>[default] Configuring and enabling network interfaces...
</span><span class='line'>[default] Mounting shared folders...
</span><span class='line'>[default] -- v-root: /vagrant</span></code></pre></td></tr></table></div></figure>


<p>However, if the process seems to stop on <code>[default] Waiting for VM to boot. This can take a few minutes.</code> you may have the same issue I had with Vagrant not achieving to connect to the virtual machine with the default network configuration (NAT). There is <a href="https://github.com/mitchellh/vagrant/issues/455">an issue on Github</a> related to this problem. The cause of this issue is currently unclear, but on my system adding this to the <code>Vagrantfile</code> has made it work without any hickup for several months:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Tries to fix issue #455
</span><span class='line'>  config.vm.customize ["modifyvm", :id, "--rtcuseutc", "on"]
</span><span class='line'>  config.ssh.max_tries = 10</span></code></pre></td></tr></table></div></figure>


<h3>Preparing the environment</h3>

<p>From now, the box you installed is not provisionned with any server software. To do so, the best way is to have built a set of Chef or Puppet recipes (or cookbook) that you will specify into <code>Vagrantfile</code>. Doing so, <code>vagrant up</code> will provision the required environment in one single step. We won&#8217;t cover this subject in here, since it focuses on setting up Vagrant itself. If you want some help to setup Chef for example, I wrote several articles on the subject, check <a href="http://www.softr.li/blog/categories/vagrant/">the vagrant category</a>.</p>

<h3>References</h3>

<p><a href="http://docs.puppetlabs.com/puppet_core_types_cheatsheet.pdf">http://docs.puppetlabs.com/puppet_core_types_cheatsheet.pdf</a>
<a href="https://github.com/example42/puppet-modules">https://github.com/example42/puppet-modules</a>
<a href="http://www.example42.com/">http://www.example42.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostgreSQL schema's owner altered in database dump preventing Rails from finding the data]]></title>
    <link href="http://www.softr.li/blog/2012/07/25/postgresql-schema-owner-altered-during-dump-prevent-access-from-rails/"/>
    <updated>2012-07-25T15:40:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/25/postgresql-schema-owner-altered-during-dump-prevent-access-from-rails</id>
    <content type="html"><![CDATA[<p>This is more a note-to-myself post, but if someone falls in the same hole, this may be helpful as I couldn&#8217;t found any help on this on the web&#8230;</p>

<p>I have a Rails application whose database is regularly backed up (thanks to the <a href="https://github.com/meskyanichi/backup/">Backup gem</a>). While updating my development environment (which is under Vagrant) and trying a migration to Rails 3.2, I was bitten by a hard-to-debug <strong>issue involving PostgreSQL schemas</strong>.</p>

<p>After creating the db (with <code>rake db:create</code>) and before loading the dump (using <code>psql -d app_development -f app.sql</code>), everything was fine: Rails could find the tables, tell which schema it was working on (returning <code>public</code> when running <code>ActiveRecord::Base.connection.current_schema</code> in the console).</p>

<p>However, as soon as I loaded the dump file, Rails could not find the data anymore (more precisely the schema). It could still access the database itself, but not the schema. Related issues were:</p>

<ul>
<li>Rails keeping saying <code>...(Table doesn't exist)</code>,</li>
<li>or a more significative <strong><code>PG::Error: ERROR:  no schema has been selected to create in</code></strong> when running <code>rake db:migrate</code>.</li>
</ul>


<p>The culprit was this line in the <code>app.sql</code> dump file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ALTER SCHEMA public OWNER TO postgres;</span></code></pre></td></tr></table></div></figure>


<p>The schema&#8217;s owner was changed to <code>postgres</code>, while Rails was trying to access it as another user (the database&#8217;s owner).</p>

<p>I just changed <code>postgres</code> to match my database name, and it worked again. Be sure to check your schema&#8217;s owner if you meet these issues!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running guard over Vagrant]]></title>
    <link href="http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant/"/>
    <updated>2012-07-21T18:05:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/21/running-guard-over-vagrant</id>
    <content type="html"><![CDATA[<p>To keep it simple, you can&#8217;t&#8230; do it properly. File events are not correctly triggered by VirtualBox on the guest when the files are updated from the host (see the related Github <a href="https://github.com/guard/listen/issues/53">issue</a>). So <strong>guard cannot detect the events issued by the host</strong>&#8230; unless you run it with the polling option:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant -p</span></code></pre></td></tr></table></div></figure>


<p>This polling option works correctly on the latest versions of VirtualBox (there was an <a href="https://github.com/guard/guard/issues/269">issue</a> before 4.1.12), but it remains a bad option because doing so my <strong>system&#8217;s CPU instantly goes to a constant 100% charge</strong>.</p>

<p>To <strong>improve the situation</strong>, you can still <strong>reduce the latency</strong> so that the polling is not done so frequently. This naturally adds some delay before the triggering of the events, but it will keep your system cool.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>guard -p -l 10</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to update VirtualBox Guest Additions on a Vagrant virtual machine]]></title>
    <link href="http://www.softr.li/blog/2012/07/21/softrli-update-virtual-box-guest-additions/"/>
    <updated>2012-07-21T18:00:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/21/softrli-update-virtual-box-guest-additions</id>
    <content type="html"><![CDATA[<h4>How to</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -c http://download.virtualbox.org/virtualbox/4.1.18/VBoxGuestAdditions_4.1.18.iso
</span><span class='line'>sudo mount VBoxGuestAdditions_4.1.18.iso -o loop /mnt
</span><span class='line'>sudo sh /mnt/VBoxLinuxAdditions.run --nox11</span></code></pre></td></tr></table></div></figure>


<p>At this point, <strong>you may encounter an error</strong> saying you need to specify <code>KERN_dir</code>. I spent some time finding what was required, finally after running all the following package installations it worked!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install linux-headers-generic
</span><span class='line'>sudo apt-get install dkms gcc
</span><span class='line'>sudo apt-get install linux-headers-2.6.32-38-generic</span></code></pre></td></tr></table></div></figure>


<p>I assume the most important is <code>dkms</code> and the appropriate <code>linux-headers-...</code> package. <strong>Check the log message</strong> provided with the error, it may indicate which package version has to be installed.</p>

<p><strong>Do not worry for the <code>Installing the Window System drivers ...fail!</code></strong> error message, this is no issue we have no window system on a vagrant box.</p>

<h4>References</h4>

<ul>
<li><a href="http://till.klampaeckel.de/blog/archives/155-VirtualBox-Guest-Additions-and-vagrant.html">till.klampaeckel.de/blog/archives/155-VirtualBox-Guest-Additions-and-vagrant.html</a></li>
<li><a href="http://ubuntuforums.org/showthread.php?t=1684185">ubuntuforums.org/showthread.php?t=1684185</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faster Sinatra development with guard-shotgun]]></title>
    <link href="http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun/"/>
    <updated>2012-07-15T18:20:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/15/sinatra-guard-shotgun</id>
    <content type="html"><![CDATA[<p><a href="http://www.sinatrarb.com/">Sinatra</a> is a really nice way to <strong>bootstrap projects</strong>. It allows to <strong>start really fast</strong>, and is really suited for <strong>API-based</strong> projects (may be a good choice for your next mobile-or-web-app backend).</p>

<p>Unlike Ruby on Rails however, Sinatra does not reload your code with each request, so you have to restart the server each time your code changes. To help you with this burden, there is a small tool called <a href="https://github.com/rtomayko/shotgun">Shotgun</a>.</p>

<p>I&#8217;ve used it but I rapidly faced a <a href="https://github.com/rtomayko/shotgun/issues/34">logging issue</a> making it useless.</p>

<p>Since I was using <strong>the excellent <a href="https://github.com/guard/guard/">Guard</a></strong>, and I had already seen a similar reloading module for Webrick, I just decided to code <a href="https://github.com/rchampourlier/guard-shotgun">guard-shotgun</a>. It&#8217;s a fairly simple <strong>plugin for Guard</strong> providing the <strong>same feature as Shotgun</strong>, but using the rock-solid fundation provided by Guard!</p>

<p>Feel free to use, fork, and even feedback it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup automatic clearing of your Rails sessions]]></title>
    <link href="http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions/"/>
    <updated>2012-07-05T09:40:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/07/05/setup-automatic-clearing-of-your-rails-sessions</id>
    <content type="html"><![CDATA[<p>With every connection to your application of a new user, bot or whatever, Rails will create a new session object.</p>

<p>If you&#8217;re using <a href="http://api.rubyonrails.org/classes/ActiveRecord/SessionStore.html">ActiveRecord::SessionStore</a> to save your sessions in your database, your database may already be alarmingly growing in size, due to the number of sessions it contains.</p>

<h3>The rake db:sessions:clear task</h3>

<p>If you don&#8217;t mind a lot about your users loosing their session, you can simply use the provided <code>rake db:sessions:clear</code> task. It will simply delete all sessions in the database. Side-effect: all current sessions are deleted, so signed in users get signed out, and you should hope they had nothing under way!</p>

<h3>A more user-friendly solution</h3>

<p>Writing a simple rake task to replace the default one and only remove sessions older than 2 weeks is as easy as adding this file to your project:</p>

<figure class='code'><figcaption><span>lib/tasks/sessions.rake  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:sessions</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Clear expired sessions (more than 2 weeks old)&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:cleanup</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;DELETE FROM sessions WHERE (updated_at &lt; &#39;</span><span class="si">#{</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">-</span> <span class="mi">2</span><span class="o">.</span><span class="n">weeks</span><span class="si">}</span><span class="s2">&#39;)&quot;</span>
</span><span class='line'>    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, if you run <code>rake sessions:cleanup</code>, only the older sessions will be removed from your database.</p>

<h3>Last but not least: automation</h3>

<p>So that you don&#8217;t have to run it every day, you can setup a cron task to do it for you. Here is the line we use:</p>

<figure class='code'><figcaption><span>crontab </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># m h  dom mon dow   command
</span><span class='line'>01 3 * * * bash -l -c 'cd /home/deployer/rails/project/current; bundle exec rake sessions:cleanup'</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions">http://blog.brightbox.co.uk/posts/clearing-out-rails-sessions</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Which HTML5 Canvas Javascript library should I use?]]></title>
    <link href="http://www.softr.li/blog/2012/06/20/which-html5-canvas-javascript-library-should-i-use/"/>
    <updated>2012-06-20T12:35:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/06/20/which-html5-canvas-javascript-library-should-i-use</id>
    <content type="html"><![CDATA[<p>I&#8217;m looking for an HTML5 Canvas library which I could use to build an interactive and animated UI control. So my requirements are essentially:</p>

<ul>
<li>well <strong>documented</strong>, <strong>supported</strong> and <strong>maintained</strong> library, because I want to be able to reuse it in later projects,</li>
<li>easing the process of creating <strong>complex graphical objects</strong> (my control is going to be quite complex, a lot more than a simple button), if possible supporting groups and layers,</li>
<li>helping me with the handling of <strong>user interactions</strong>,</li>
<li>supporting <strong>touch devices</strong>,</li>
<li>providing tools for <strong>animating</strong> the graphical content.</li>
</ul>


<p>I&#8217;ve searched for the appropriate library, so I will share with you the results of my search. After a list of most of the available libraries, I investigated the following shortlist of libraries: <strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> and <strong>Kinetic.js</strong>. I hope this can help you with your own choice!</p>

<!-- more -->


<h3>Found libraries</h3>

<p>Here is the list of what seems to be the main still-maintained Canvas libraries.</p>

<ul>
<li><a href="https://github.com/hyperandroid/CAAT">CAAT</a></li>
<li><a href="http://www.createjs.com/#!/EaselJS">EaselJS</a></li>
<li><a href="http://fabricjs.com/">Fabric.js</a></li>
<li><a href="http://guryjs.org/">Gury</a></li>
<li><a href="http://jcscript.com/">JcanvaScript</a></li>
<li><a href="http://www.kineticjs.com/">Kinetic.js</a></li>
<li><a href="http://ocanvas.org/">oCanvas</a></li>
<li><a href="http://paperjs.org/">Paper.js</a></li>
<li><a href="http://processingjs.org/">processing.js</a></li>
</ul>


<p>Here are some other libraries I have not investigated, either because they weren&#8217;t on Github or seemed abandoned:</p>

<ul>
<li><a href="http://code.google.com/p/cakejs/">cakejs</a></li>
<li><a href="https://github.com/lamberta/doodle-js">Doodle-js</a></li>
<li><a href="https://canvastoolkit.codeplex.com/">CanvasToolkit</a></li>
<li><a href="http://mootools.net/forge/p/mootools_canvas_lib">Mootools Canvas lib</a></li>
</ul>


<h3>The Github comparison</h3>

<table>
<thead>
<tr>
<th>Library       </th>
<th> Watch </th>
<th> Fork </th>
<th> Issues</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> 336   </td>
<td> 42   </td>
<td> 17</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> 1,440 </td>
<td> 203  </td>
<td> 90    </td>
</tr>
<tr>
<td>fabric.js     </td>
<td> 1,059 </td>
<td> 101  </td>
<td> 38    </td>
</tr>
<tr>
<td>gury          </td>
<td> 348   </td>
<td> 19   </td>
<td> 9     </td>
</tr>
<tr>
<td>jCanvaScript  </td>
<td> 80    </td>
<td> 5    </td>
<td> 2     </td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> 267   </td>
<td> 41   </td>
<td> 7    </td>
</tr>
<tr>
<td>oCanvas       </td>
<td> 194   </td>
<td> 20   </td>
<td> 6 </td>
</tr>
<tr>
<td>Paper.js      </td>
<td> 1,706 </td>
<td> 111  </td>
<td> 30</td>
</tr>
<tr>
<td>processing.js </td>
<td> 1,276 </td>
<td> 206  </td>
<td> N/A</td>
</tr>
</tbody>
</table>


<h3>The minified size comparison</h3>

<table>
<thead>
<tr>
<th>Library       </th>
<th> Size (kb)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> 210</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> 44</td>
</tr>
<tr>
<td>fabric.js     </td>
<td> 133</td>
</tr>
<tr>
<td>gury          </td>
<td> 11</td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> 53</td>
</tr>
<tr>
<td>oCanvas       </td>
<td> 18</td>
</tr>
</tbody>
</table>


<p><em>No minified version was available in the Github repo for jCanvaScript, Paper.js and processing.js.</em></p>

<h3>The Stackoverflow comparison</h3>

<table>
<thead>
<tr>
<th>Search text   </th>
<th> Tag           </th>
<th> # tagged questions </th>
<th> # search questions</th>
</tr>
</thead>
<tbody>
<tr>
<td>CAAT          </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 5</td>
</tr>
<tr>
<td>EaselJS       </td>
<td> easeljs       </td>
<td> 30                 </td>
<td> 79</td>
</tr>
<tr>
<td>fabric.js     </td>
<td> fabricjs      </td>
<td> 43                 </td>
<td> 78</td>
</tr>
<tr>
<td>jCanvaScript  </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 6</td>
</tr>
<tr>
<td>Kinetic.js    </td>
<td> kineticjs     </td>
<td> 74                 </td>
<td> 30</td>
</tr>
<tr>
<td>oCanvas       </td>
<td> N/A           </td>
<td> N/A                </td>
<td> 19</td>
</tr>
<tr>
<td>Paper.js      </td>
<td> paperjs       </td>
<td> 9                  </td>
<td> 49</td>
</tr>
<tr>
<td>processing.js </td>
<td> processing.js </td>
<td> 117                </td>
<td> 289 </td>
</tr>
</tbody>
</table>


<p><em>The gury library could not be found on StackOverflow. I&#8217;ve used N/A when I couldn&#8217;t find a matching tag.</em></p>

<h3>Review from documentation, tutorials and other resources</h3>

<p>When choosing a framework, I value most the Github comparison. It provides a good overview of the development state of the library and the community using it. Since I&#8217;m generally not going to an expert level in a given field, I like being able to rely on the community.</p>

<p>But StackOverflow (SO) is really helpful, in particular when the comparison question has already been asked. Check this: <a href="http://stackoverflow.com/questions/8938969/current-state-of-javascript-canvas-libraries2012">Current state of Javascript canvas libraries</a></p>

<p>As a consequence, I will give a deeper review on documentation, tutorials and other resources for <strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> and the outsider, <strong>Kinetic.js</strong> to make a choice.</p>

<h4>Summary</h4>

<p><strong>EaselJS</strong>, <strong>fabric.js</strong>, <strong>Paper.js</strong>, <strong>processing.js</strong> can be seen as the 4 leaders. They have definitely the biggest communities of users, are available on Github, well documented, lots of external references (questions on SO, forums), and a good thing, according the the previous SO question, they are unit-tested.</p>

<p><strong>Kinetic.js</strong> is the outsider. Added more recently on Github, it&#8217;s still quite dynamic but received a warm welcome from <a href="http://stackoverflow.com/users/130652/kangax">kangax</a>, the author of Fabric.js, in a SO comment.</p>

<p>These 4 libraries are all available on Github, and released under the permissive MIT license.</p>

<h4>EaselJS</h4>

<p>This library is <strong>part of the CreateJS suite</strong> which is a full-featured set of libraries to build advanced HTML5 interactive and animated graphics.</p>

<p>In particular, combined with the animation library (TweenJS), complex animations should be buildable. You also get the SoundJS library and the asset preloading library (PreloadJS) so you should have everything you need if you intend to build a game.</p>

<p>The website provides some nice demos whose source code is available within the Github repository.</p>

<p>The library also seems to work well with other libraries such as Box2d and TexturePacker.</p>

<p><strong>Support of touch devices is built in.</strong></p>

<h4>fabric.js</h4>

<p>Looking at the <a href="http://fabricjs.com/">home page</a>, it seems this library is more oriented on building <strong>vector edition tools</strong>. The main features are:</p>

<ul>
<li>create and manipulate (move, scale, rotate&#8230;) vector shapes and text objects,</li>
<li>import/export from/to SVG.</li>
</ul>


<p>It&#8217;s summarized as <em>&#8220;an interactive object model on top of canvas element&#8221;</em>.</p>

<p><strong>If your goal is to build complex scenes, animate objects, it seems to me it&#8217;s not the right choice.</strong></p>

<h4>Paper.js</h4>

<p>This library is a port from the Scriptographer library. A particularity is it&#8217;s Paperscript language, which is basically an extended Javascript providing some mathematical operations on point and size objects. However it&#8217;s still <a href="http://paperjs.org/tutorials/getting-started/paperscript-interoperability/">not documented</a>.</p>

<p>This library seems powerful in its capacity to build complex vector objects and managing mouse interactions. However, there is no mention of touch devices support, and the animation capability seems to be limited to the <code>onFrame()</code> method which is called 60 times per second and allows you to change the content of the canvas.</p>

<h4>processing.js</h4>

<p>The core goal of this library is to build <strong>interactive visualizations</strong>.</p>

<p>This library has a particulary history since it&#8217;s a port of the famous Processing library. I say famous, not because I knew it myself, but because it&#8217;s said to be famous among the multimedia and art community which uses it to build <strong>interactive artistic creations</strong>.</p>

<p>Looking at the <a href="http://processingjs.org/learning/">first code example</a>, it seems that this library intends to lower the learning curve for building animated and interactive graphics with the Canvas. It provides the tools to easily have a run loop and a <code>draw()</code> method you simply fill to build your visualization.</p>

<p>I think it thus provide a <strong>low learning-curve</strong>, perfect for <strong>non-developers artists and creative people</strong>, but is <strong>not the best-suited tool for building object-oriented components</strong>.</p>

<h4>Kinetic.js</h4>

<p>Kinetic.js is the outsider of this comparison because looking to its Github repo, it&#8217;s far from being the most used one. However, a search on &#8220;canvas library&#8221; will return the associated HTML5 tutorials as first result, and it has a good deal of questions on StackOverflow.</p>

<p>The name is a good clue, but this library is advertised as <strong>pretty fast</strong> with lots of objects thanks to the use of multiple canvases.</p>

<p>It is provided with a <strong>nice documentation with tutorials</strong>, with an introduction on barebones HTML5 canvas use, detailed documentation on Kinetic.js and Three.js. It also provides nice tips, not specific to the library itself, to perform some actions with canvas.</p>

<h3>Result</h3>

<p>According to this review, I think I could go with one of <strong>EaselJS</strong> or <strong>Kinetic.js</strong>. <strong>Paper.js</strong> was not far but there is no mention of touch device support, so I&#8217;m pretty sure this would not be complicated to integrate, but I prefer to have something built in the library.</p>

<p>Finally, I will go with the outsider <strong>Kinetic.js</strong> because:</p>

<ul>
<li>I feel good with the example code,</li>
<li>the author provides an excellent <a href="http://www.html5canvastutorials.com/">set of tutorials</a>,</li>
<li>the documentation and examples are cleara and easy to read,</li>
<li>everything I need is included in the library (I don&#8217;t feel like I may need to add another library such as <strong>TweenJS</strong> to solve a small problem while loading another large library I&#8217;m using at 20%).</li>
</ul>


<p><em>Feel free to share your comments, reviews, or missing libraries!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode failing when building for archiving because of a missing library link]]></title>
    <link href="http://www.softr.li/blog/2012/06/11/xcode-failing-when-building-for-archiving-because-of-a-missing-library-link/"/>
    <updated>2012-06-11T11:07:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/06/11/xcode-failing-when-building-for-archiving-because-of-a-missing-library-link</id>
    <content type="html"><![CDATA[<h3>The issue</h3>

<p>You may be using opensource libraries within your iOS project. (<em>If you don&#8217;t, you should, it&#8217;s a great time-saver. Check <a href="http://pinterest.com/rchampourlier/best-ios-controls/">here</a> for some starters.</em>)</p>

<p>As you may know, XCode may sometimes become really painful when dealing with the <strong>compilation and linking of external libraries</strong>. It may just work fine when compiling for development, but when you want it compiled for distribution, XCode may just not agree anymore.</p>

<p>I just faced such an issue this morning. This time, I met the <code>ld: library not found for...</code> error:</p>

<p><img src="http://www.softr.li/images/2012-06-11-screenshot-1.png"></p>

<!-- more -->


<p>Googling a little, I found these two StackOverflow answers, but they could not help me. You can give a try, this may still contain the answer to your own issue.</p>

<h3>The solution</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/5584317/compile-build-or-archive-problems-with-xcode-4-and-dependancies">Compile, Build or Archive problems with Xcode 4 (and dependancies)</a></li>
<li><a href="http://stackoverflow.com/questions/6004919/missing-library-link-error-when-doing-product-build-for-archiving-in-xcode-4">Missing Library link error when doing Product > Build For Archiving in Xcode 4</a></li>
</ul>


<p>I checked where the generated could be, and looking at the logs of the build process, I could find the directory&#8217;s path: <code>/Users/me/Library/Developer/Xcode/DerivedData/.../</code></p>

<p>Checking the content of this directory, I discovered that my issue was that the library was indeed not build for the <code>Distribution-iphoneos</code> configuration:</p>

<p><img src="http://www.softr.li/images/2012-06-11-screenshot-2.png"></p>

<p>Correcting the issue was as simple as going to the library&#8217;s project settings and adding the <code>Distribution</code> configuration:</p>

<p><img src="http://www.softr.li/images/2012-06-11-screenshot-3.png"></p>

<h3>The conclusion</h3>

<p>Be sure to check that the libraries you include within your XCode project have all the necessary configurations setup!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Bootstrap within your Rails 3.1+ app]]></title>
    <link href="http://www.softr.li/blog/2012/06/07/how-to-use-bootstrap-within-your-rails-3.1-app/"/>
    <updated>2012-06-07T12:00:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/06/07/how-to-use-bootstrap-within-your-rails-3.1-app</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.github.com/bootstrap">Bootstrap</a> is a real gift from Twitter. It provides a good deal of packaged, well-designed and simple to use UI components for any web application.</p>

<p>I wanted to use it for quite some time, but I hadn&#8217;t found the time nor the project to apply it on. I recently updated an administration web-app for one of my project, and I felt it was the good time.</p>

<p>So here are my first feedbacks and tips on how to integrated Bootstrap with Rails (I&#8217;m on Rails 3.2.5, it&#8217;s the lowest-effort path if you&#8217;re using Formtastic too).</p>

<!-- more -->


<h3>First, where do I put the files?</h3>

<p>Say you want to use <a href="http://twitter.github.com/bootstrap">Twitter Bootstrap</a> within your Rails 3.1+ (ie. asset pipeline featured) application.</p>

<p>After some tests I couldn&#8217;t find a simple way to <strong>keep the whole bootstrap directory packaged and get it accessed correctly by the asset pipeline</strong>. So the best way I found yet is to <strong>explode it into the appropriate directories</strong>:</p>

<ul>
<li>CSS files goes into <code>vendor/assets/stylesheets</code></li>
<li>JS files goes into <code>vendor/assets/javascripts</code></li>
<li>image files goes into <code>vendor/assets/images</code></li>
</ul>


<p>So this way I can simply require Bootstrap CSS through this <code>application.css</code> file:</p>

<figure class='code'><figcaption><span>app/assets/application.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*</span>
</span><span class='line'><span class="c"> * This is a manifest file that&#39;ll automatically include all the stylesheets available in this directory</span>
</span><span class='line'><span class="c"> * and any sub-directories. You&#39;re free to add application-wide styles to this file and they&#39;ll appear at</span>
</span><span class='line'><span class="c"> * the top of the compiled file, but it&#39;s generally better to create a new file per style scope.</span>
</span><span class='line'><span class="c"> *= require_self</span>
</span><span class='line'><span class="c"> *= require_tree . </span>
</span><span class='line'><span class="c"> *= require bootstrap</span>
</span><span class='line'><span class="c">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p>If this does not work, be sure to <strong>restart your development server</strong> as changing location of assets may not be taken into account until restart&#8230;</p>

<h3>This breaks my tasty forms!</h3>

<p>Are you using <a href="https://github.com/justinfrench/formtastic">Formtastic</a>? I am, this is one of the things I like to have with every Rails project. However, Formtastic and Bootstrap do not naturally go together well.</p>

<p>To make them love each other, we have to add a gem which will tweak the way Formtastic builds the forms to make them Bootstrap-proof. This is the intent of <a href="https://github.com/rchampourlier/formtastic-bootstrap">formtastic-bootstrap</a>.</p>

<p>You can add this to your Gemfile, that should be all:</p>

<figure class='code'><figcaption><span>app/assets/application.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">gem</span> <span class="s1">&#39;formtastic-bootstrap&#39;</span><span class="o">,</span> <span class="nd">:git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://github.com/rchampourlier/formtastic-bootstrap.git&#39;</span><span class="o">,</span> <span class="nd">:branch</span> <span class="o">=&gt;</span> <span class="s1">&#39;bootstrap2-rails3-2-formtastic-2-2-1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>This assumes your on Rails 3.2 and Formtastic 2.2.1, as the branch name indicates.</em></p>

<p>I&#8217;ve sent you to my own fork which is forking an already long chain of forks. The <a href="https://github.com/mjbellantoni/formtastic-bootstrap">original repo</a> seems not to be maintained anymore. My fork provides a <code>bootstrap2-rails3-2-formtastic-2-2-1</code> branch which should work for Rails 3.2 and the current version of Formtastic, the 2.2.1 (some changes were to be taken into account from 2.2.0).</p>

<p><em>My fork does not take all 2.2.1 changes into account. You may have issues with <code>time_select</code> inputs&#8230;</em></p>

<h3>My flash messages aren&#8217;t that nice!</h3>

<p>To style your Rails&#8217; flash messages using the nice Bootstrap&#8217;s alert style, you can have a look to this <a href="https://gist.github.com/2887844">gist</a>:</p>

<div><script src='https://gist.github.com/2887844.js?file='></script>
<noscript><pre><code>- if flash
  - flash.each do |level, message|
    %div{:class =&gt; &quot;alert #{flash_level(level)}&quot;}
      %button.close{:&quot;data-dismiss&quot; =&gt; 'alert'}= &quot;×&quot;
      = message</code></pre></noscript></div>


<p>Just replace your current way of displaying the flashes in your template with this, and you&#8217;re done!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">render</span> <span class="ss">:partial</span> <span class="o">=&gt;</span> <span class="s1">&#39;layouts/flash&#39;</span><span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:flash</span> <span class="o">=&gt;</span> <span class="n">flash</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p><em>I hope this helps, do not hesitate if you see mistakes or some parts which require additional details!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppleScript to automate the setup of your development space]]></title>
    <link href="http://www.softr.li/blog/2012/05/26/applescript-to-automate-the-setup-of-your-development-space/"/>
    <updated>2012-05-26T16:34:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/26/applescript-to-automate-the-setup-of-your-development-space</id>
    <content type="html"><![CDATA[<p>Today is Saturday, and like every week-end, I&#8217;m getting a little lazy.</p>

<p>Say you&#8217;re working on a Rails project on MacOS X. If you&#8217;re like me, you like to have a terminal window for your project with several tabs:</p>

<ul>
<li>one for typing various commands,</li>
<li>one with your <code>spork</code> process,</li>
<li>one with your <code>rails console</code>,</li>
<li>and one with your <code>rails server</code>.</li>
</ul>


<p>Starting all this little world already involves some keystrokes and typing, even more if you&#8217;re using Vagrant (which <a href="http://www.softr.li/blog/categories/vagrant/">I&#8217;m using for a week</a> and is really awesome).</p>

<p>So why not use the simple tools provided by Apple to have this setup with a single action?</p>

<!-- more -->


<h2>The AppleScript</h2>

<p>AppleScript is the scripting solution provided by Apple and it&#8217;s perfect for what we want to do. It&#8217;s quite simple, and it allows you to script the Terminal application.</p>

<p>Here is the script:</p>

<div><script src='https://gist.github.com/2794125.js?file='></script>
<noscript><pre><code>-- This script enables you to use MacOS X AppleScript to open a terminal
-- window and several tabs to:
--   - load a vagrant box with vagrant up
--   - ssh in the box on each tab
--   - run specific commands within the vagrant box on different tabs
--
-- For example, open 4 tabs, each within the vagrant box, one with spork,
-- one with a Rails console and the last one with the rails server.
--
-- It assumes when you ssh into the vagrant box you automatically cd into
-- the project's directory (by having a `cd /vagrant` within your
-- `~/.bashrc` on the box for example).
--
-- It also uses a `dev-project` alias on the host which cd in the appropriate
-- project's directory, but you can just replace it by a `cd ...` command.

using terms from application &quot;Terminal&quot;
  tell application &quot;Terminal&quot;
    activate
    
    -- open the terminal's window, set its dimensions   
    set tab1 to do script
    do script &quot;dev-project&quot; in tab1
    do script &quot;vagrant up&quot; in tab1
    repeat
      delay 0.5
      if busy of tab1 is false then exit repeat
    end repeat
    
    -- tab 1: ssh in vagrant
    do script &quot;vagrant ssh&quot; in tab1
    delay 0.5
    
    -- tab 2: ssh in vagrant and run spork
    tell application &quot;System Events&quot; to keystroke &quot;t&quot; using command down &amp; return
    set tab2 to tab 2 of currentWindow
    do script &quot;dev-project&quot; in tab2
    do script &quot;vagrant ssh&quot; in tab2
    do script &quot;bundle exec spork&quot; in tab2
    delay 0.5
    
    -- tab 3: ssh in vagrant and run rails console
    tell application &quot;System Events&quot; to keystroke &quot;t&quot; using command down &amp; return
    set tab3 to tab 3 of currentWindow
    do script &quot;dev-project&quot; in tab3
    do script &quot;vagrant ssh&quot; in tab3
    do script &quot;bundle exec rails console&quot; in tab3
    delay 0.5
    
    -- tab 4: ssh in vagrant and run spork
    tell application &quot;System Events&quot; to keystroke &quot;t&quot; using command down &amp; return
    set tab4 to tab 4 of currentWindow
    do script &quot;dev-project&quot; in tab4
    do script &quot;vagrant ssh&quot; in tab4
    do script &quot;bundle exec rails server&quot; in tab4
  end tell
end using terms from</code></pre></noscript></div>


<p>It&#8217;s intended for my use, so it relies on some aliases I&#8217;ve defined on my host machine. But it&#8217;s quite simple to read and comes with some comments, so I&#8217;m sure you will have no difficulty to adapt it to your needs.</p>

<h2>Access the script</h2>

<p>You can run this script from a Terminal window by using <code>osascript path/to/the/script.scpt</code>, but I prefer to have it in the script menu.</p>

<p>You can activate the script menu from the script editor&#8217;s preferences. Then just have a look in the menu to open the user&#8217;s scripts directory and put your script file in it.</p>

<hr />

<p><em>If you need any help, just ask!</em></p>

<p><em>If you&#8217;re aware of a better solution to setup a development environment like this, don&#8217;t hesitate to tell me! I&#8217;m pretty sure there are some other ways I don&#8217;t know yet&#8230;</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Forked TabBarKit]]></title>
    <link href="http://www.softr.li/blog/2012/05/24/forked-tabbarkit/"/>
    <updated>2012-05-24T16:52:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/24/forked-tabbarkit</id>
    <content type="html"><![CDATA[<p>I have had to rewrite some parts of TBKTabBarController since I needed to be able to programmatically select a tab. This is normally possible by setting the <code>selectedIndex</code> or the <code>selectedViewController</code> property of the tab bar controller, but this was not working with TabBarKit.</p>

<p>I investigated and detected this behavior was not implemented, so I decided to complete it myself.</p>

<p>Along the way, I discovered there were some issues with the <code>containerView</code> being mixed up with the <code>TBKTabBarController</code>&#8217;s view, so I also corrected these bugs.</p>

<p>I&#8217;ve forked the repository and updated it with my corrected code, so have a look to this <a href="https://github.com/rchampourlier/TabBarKit">repo</a> if you need this.</p>

<p>Oh, I also added a <code>TBKTabBarStyleTwiceHeight</code> I use to double the size of the tab bar on iPad, so you get this for free too ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef recipe to install a PostgreSQL server on a machine configured with en_US locales]]></title>
    <link href="http://www.softr.li/blog/2012/05/22/chef-recipe-to-install-a-postgresql-server-on-a-machine-configured-with-en_us-locales/"/>
    <updated>2012-05-22T00:00:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/22/chef-recipe-to-install-a-postgresql-server-on-a-machine-configured-with-en_us-locales</id>
    <content type="html"><![CDATA[<p>If you have tried to install a PostgreSQL server on a Vagrant box and you&#8217;re not an english-native, you may have faced an UTF8 issue:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE DATABASE db_mydb OWNER my_user ENCODING 'UTF8' TEMPLATE template1;
</span><span class='line'>createdb: database creation failed: ERROR:  encoding UTF8 does not match locale en_US
</span><span class='line'>DETAIL:  The chosen LC_CTYPE setting requires encoding LATIN1</span></code></pre></td></tr></table></div></figure>


<p>This is due to your Vagrant base box being configured with <code>en_US</code> locales. When the PostgreSQL server is installed, it is configured according to these locales, and gets an <code>en_US</code> config which is not compatible with <code>UTF8</code> encoding databases.</p>

<!-- more -->


<p>Manually, you would change your server&#8217;s locales before running the PostgreSQL installation.</p>

<p>To do this using Chef, this will take you 2 additional steps.</p>

<h3>1. Configure the machine&#8217;s locales permanently</h3>

<p>An approach which worked for me is to add a <code>/etc/profile.d/lang.sh</code> file which will configure your shell with the appropriate locale-related environment variables. Here is the template script:</p>

<figure class='code'><figcaption><span>lang.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">LANGUAGE</span><span class="o">=</span><span class="s2">&quot;en_US.UTF-8&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">LANG</span><span class="o">=</span><span class="s2">&quot;en_US.UTF-8&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">LC_ALL</span><span class="o">=</span><span class="s2">&quot;en_US.UTF-8&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once this is done, you need to run some commands on the server to prepare the locale files:</p>

<figure class='code'><figcaption><span>lang.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>locale-gen en_US.UTF-8
</span><span class='line'>dpkg-reconfigure locales
</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;ve build a small cookbook as part of my <a href="https://github.com/rchampourlier/vagrant-stacks">vagrant-stacks</a> repo, you can find it <a href="https://github.com/rchampourlier/vagrant-stacks/tree/master/cookbooks_local/set_locale">there</a>.</p>

<h3>2. Install the PostgreSQL server with the appropriate environment variables</h3>

<p>After running the locale configuration from your Chef recipe, you may want to continue with the PostgreSQL install. However, even if we&#8217;ve added the <code>lang.sh</code> initialization script, it hadn&#8217;t the chance to be loaded yet. So the required environment variables are not set yet.</p>

<p>To ensure these environment variables get loaded when we run our <code>postgresql::server</code> recipe, we will encapsulate this call in a small recipe:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;LANGUAGE&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;LANG&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;LC_ALL&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;en_US.UTF-8&quot;</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s2">&quot;postgresql::server&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can find this mini-recipe <a href="https://github.com/rchampourlier/vagrant-stacks/tree/master/cookbooks_local/postgresql_server_utf8">here</a> again in my vagrant-stacks repo!</p>

<p><strong>That should be all!</strong></p>

<p><em>If I forgot some step or you can&#8217;t manage to get this working, do not hesitate to write a comment. I&#8217;ll do my best to answer!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrant-stacks, a provision-on-demand tool for Vagrant!]]></title>
    <link href="http://www.softr.li/blog/2012/05/20/vagrant-stacks-a-provision-on-demand-tool-for-vagrant/"/>
    <updated>2012-05-20T09:42:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/20/vagrant-stacks-a-provision-on-demand-tool-for-vagrant</id>
    <content type="html"><![CDATA[<p><a href="http://www.vagrantup.com">Vagrant</a> is really an excellent tool for building and using virtual machines for your development environment. It <strong>ease the maintenance</strong> and allows to <strong>share the same environment within the whole team</strong>.</p>

<p>However, <strong>Vagrant itself only provides you with barebones boxes</strong>.  You still have to work for provisioning the box, <strong>which requires that you build a Chef recipe</strong> (or Puppet, but I&#8217;m using Chef so I will only refer to this one).</p>

<p><strong>Instead of using a packaged box</strong> (e.g. from <a href="[http://vagrantbox.es">vagrantbox.es</a>) which you may <strong>not trust or feal comfortable with</strong>, you can use <a href="https://github.com/rchampourlier/vagrant-stacks">this repo</a> to <strong>build and package your Vagrant box by yourself</strong>. It provides the tools and some configurations which will enable you to build a provisioned box without writing the recipe! The advantage of this approach over packaged boxes is that you can <strong>review how the box is built and provisioned</strong>. You can even refine the configurations and build new ones by forking the repo and submitting pull requests!</p>

<p>It already provides a configuration for a <strong>Ruby 1.9.2-p290 stack, managed with rbenv and Bundler, plus a PostgreSQL 8.4 database and MongoDB</strong>.</p>

<p>So feel free to <strong>try and share new configurations</strong>! Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Organization for provisioning your environments (from dev to prod) with Chef]]></title>
    <link href="http://www.softr.li/blog/2012/05/19/organization-for-provisioning-your-environments-from-dev-to-prod-with-chef/"/>
    <updated>2012-05-19T11:56:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/19/organization-for-provisioning-your-environments-from-dev-to-prod-with-chef</id>
    <content type="html"><![CDATA[<p>When you start developping a project with a team, you may start facing issues requiring you to share the same development environment. I just discovered <a href="www.vagrantup.com">Vagrant</a> and it&#8217;s the perfect solution for doing this.</p>

<p>Vagrant is nice, but it stills requires you to provision your machine with the needed language stacks, services, etc. This is why it&#8217;s provided with a way to hook into Chef or Puppet.</p>

<p><em>I&#8217;ll go with Chef because I had already given it a try sometime ago, and config files are written in Ruby, which I know.</em></p>

<p>Since you&#8217;re going to build recipes and/or cookbooks <strong>to provision your development machine, what about going a little further and using Chef to provision your staging/production machines too?</strong></p>

<!-- more -->


<p>There will be differences between your development and staging/production setups. However, you will have to install the same databases, maybe some background processors and some other services, so most of the provisioning that you will prepare for your development machine can be reused to provision your staging/production machines too.</p>

<h3>Purpose</h3>

<p>The purpose of this tutorial <strong>is not to be a complete walkthrough</strong> for doing this, since this would involve explaining how to build Chef recipes/cookbooks, running Chef-Solo, etc. It only intends to let you imagine what you could do to ease your provisioning process, knowing the tools exist and they can be used like this. Plus I propose a simple organization for your configuration files that may help you with it.</p>

<h3>Tools</h3>

<h4>Chef</h4>

<p>Chef is a configuration manager which will read a recipe and use cookbooks to perform operations on a given machine (or node).</p>

<p>It has several architectures:</p>

<ul>
<li><strong>Chef Client/Server</strong>: the node performing the operations is the Chef Client and the operations to be performed are determined thanks to a Chef Server. This solution provides some advantages because the server can remember some information on the state of each node. Opscode provides an <a href="http://www.opscode.com/hosted-chef/">Hosted Chef Server</a> for free up to 5 nodes.</li>
<li><strong>Chef Solo</strong>: the node performing the operations is running Chef Solo and the operations to be performed are defined by local files (or a <code>tgz</code> which can be downloaded from somewhere). It&#8217;s the fast way, and should be sufficient for provisioning your development machines and a few staging/production machines.</li>
</ul>


<p>For the installation of any of the two solutions, please refer to <a href="http://www.opscode.com/chef/">Opscode&#8217;s documentation</a>. For your Vagrant machines, no installation needed, everything is already <a href="http://vagrantup.com/docs/getting-started/provisioning.html">hooked in</a>.</p>

<h4>Puppet</h4>

<p>An alternative for Chef is Puppet, which can be hooked into Vagrant too. I won&#8217;t detail it since I never tried it&#8230;</p>

<h4>Librarian</h4>

<p><a href="https://github.com/applicationsonline/librarian">Librarian</a> is a useful tool which will help you bundle your cookbooks.</p>

<p>To build your recipe and provisioning configuration, you will rely on cookbooks, most of them defined and shared by the community. You will find many on Github, the main repositories being provided by <a href="https://github.com/opscode-cookbooks/">Opscode</a>.</p>

<p>With Librarian you build a <code>Cheffile</code> and the principle is almost the same as Bundler for gems: you list the required cookbooks, you can specify their location and the version you want to use, and Librarian will gather them for you, ensuring the correct version of the cookbook is fetched, so that you won&#8217;t get a broken version if it gets updated.</p>

<p>Once you&#8217;ve created the <code>Cheffile</code>, it&#8217;s almost as simple as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install librarian
</span><span class='line'>librarian-chef install</span></code></pre></td></tr></table></div></figure>


<h3>Organization</h3>

<p>How to organize all this for the provisioning of machines related to your project? Here&#8217;s my approach, starting with the files-tree:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ project
</span><span class='line'>  + machines
</span><span class='line'>    + cookbooks
</span><span class='line'>      ...
</span><span class='line'>      &lt;the cookbooks directories generated by Librarian&gt;
</span><span class='line'>      ...
</span><span class='line'>      + cookbooks_local
</span><span class='line'>        + project
</span><span class='line'>          + recipes
</span><span class='line'>            - default.rb
</span><span class='line'>            - development.rb
</span><span class='line'>            - staging.rb
</span><span class='line'>            - production.rb
</span><span class='line'>          - metadata.json
</span><span class='line'>      + operations
</span><span class='line'>        - provision_development.json
</span><span class='line'>        - provision_staging.json
</span><span class='line'>        - provision_production.json
</span><span class='line'>      + roles
</span><span class='line'>        - base.json
</span><span class='line'>        - databases.json
</span><span class='line'>        - maintenance.json
</span><span class='line'>        - ruby.json
</span><span class='line'>      - Cheffile
</span><span class='line'>      - Cheffile.lock
</span><span class='line'>      - solo.rb</span></code></pre></td></tr></table></div></figure>


<h4><code>cookbooks</code></h4>

<p>This is the directory of cookbooks generated by Librarian according to the content of your <code>Cheffile</code>.</p>

<p>Please notice the <code>Cheffile.lock</code> file which will keep the references to the cookbooks versions you have actually installed. This allows you to restore the <code>cookbooks</code> directory with the same versions of the cookbooks even if you did not specified particular versions of the cookbooks. This way, you don&#8217;t need to commit your <code>cookbooks</code> directory with your versioning system.</p>

<h4><code>cookbooks_local</code></h4>

<p>This directory contains the cookbooks you maintain yourself and that you will use to setup your own environments.</p>

<p>Inside, I have a <code>project</code> cookbook containing recipes for any of the different environments I have to setup: development, staging, production.</p>

<p>The best way to build this cookbook is to look at others, and customize as needed. I have a <code>metadata.json</code> which describes the cookbook. I&#8217;m not sure it&#8217;s required, but I think it&#8217;s better to have it.</p>

<h4><code>operations</code></h4>

<p>When you want Chef to perform operations on a node, you provide it with a <em>run list</em> and some <em>attributes</em>. For Chef Client/Server, this is defined on the server. For Chef Solo, you generally provide the <code>chef-solo</code> command with a JSON file (often named <code>dna.json</code>).</p>

<p>Here instead of one <code>dna.json</code> file, I keep several files allowing me to run different sets of operations. For example here is the content of my <code>provision_development.json</code> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;run_list&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;role[base]&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;role[ruby]&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;role[databases]&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;recipe[project::development]&quot;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>
</span><span class='line'>  <span class="s2">&quot;ruby_stack&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;rubies&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;1.9.2-p290&quot;</span><span class="p">],</span>
</span><span class='line'>    <span class="s2">&quot;global&quot;</span><span class="o">:</span> <span class="s2">&quot;1.9.2-p290&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;users&quot;</span><span class="o">:</span> <span class="s2">&quot;vagrant&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="s2">&quot;postgresql&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;postgres&quot;</span><span class="o">:</span> <span class="s2">&quot;password&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This file provides Chef-Solo with a run list, which will run several roles (defined in the different JSON files under <code>roles</code> and described in the next paragraph), recipes, and define the attributes that may be required by the different recipes.</p>

<p>Why several configuration files? Because for my production environment, I will want to run another role: <code>role[maintenance]</code>  which will provision a set of tools to help me with maintenance tasks, and use another recipe for the project&#8217;s specific provisioning: <code>recipe[project::production]</code>.</p>

<h4><code>roles</code></h4>

<p>The roles are a simple concept allowing you to bundle a set of recipes together.</p>

<p>Here is our <code>base.json</code> role file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;base&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;description&quot;</span><span class="o">:</span> <span class="s2">&quot;Base role applied to all nodes.&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;chef_type&quot;</span><span class="o">:</span> <span class="s2">&quot;role&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;json_class&quot;</span><span class="o">:</span> <span class="s2">&quot;Chef::Role&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="s2">&quot;run_list&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;recipe[apt]&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;recipe[build-essential]&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;recipe[git]&quot;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, it allows us to group several recipes depending on the role of the machine:</p>

<ul>
<li><code>base</code> will be provisioned on all nodes,</li>
<li><code>ruby</code> will be provisioned for nodes requiring it,</li>
<li><code>databases</code> will be provisioned for nodes acting as databases servers,</li>
<li>etc.</li>
</ul>


<h4>Cheffile</h4>

<p>That&#8217;s the file used by Librarian to get the required cookbooks. It takes this form:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">site</span> <span class="s2">&quot;http://community.opscode.com/api/v1&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">cookbook</span> <span class="s2">&quot;apt&quot;</span>
</span><span class='line'><span class="nx">cookbook</span> <span class="s1">&#39;build-essential&#39;</span>
</span><span class='line'><span class="nx">cookbook</span> <span class="s1">&#39;git&#39;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="nx">cookbook</span> <span class="s1">&#39;ruby_build&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="o">:</span><span class="nx">git</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://github.com/fnichol/chef-ruby_build.git&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="o">:</span><span class="nx">ref</span> <span class="o">=&gt;</span> <span class="s1">&#39;v0.6.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The first line starting with <code>site</code> allows you to get the cookbooks from Opscode community easily. You can also specify a location (git, local), for the cookbooks not available on this community. Just check <a href="https://github.com/applicationsonline/librarian">Librarian&#8217;s documentation</a>.</p>

<h4><code>solo.rb</code></h4>

<p>That&#8217;s the configuration file we use to run Chef-Solo. Here is the content for this configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">chef</span><span class="o">-</span><span class="nx">solo</span> <span class="o">-</span><span class="nx">c</span> <span class="p">.</span><span class="o">/</span><span class="nx">solo</span><span class="p">.</span><span class="nx">rb</span> <span class="o">-</span><span class="nx">j</span> <span class="p">.</span><span class="o">/</span><span class="nx">operations</span><span class="o">/</span><span class="nx">operation</span><span class="p">.</span><span class="nx">json</span>
</span><span class='line'><span class="nx">file_cache_path</span> <span class="s2">&quot;/tmp/chef&quot;</span>
</span><span class='line'><span class="nx">cookbook_path</span> <span class="p">[</span><span class="nx">File</span><span class="p">.</span><span class="nx">expand_path</span><span class="p">(</span><span class="s1">&#39;../cookbooks&#39;</span><span class="p">,</span> <span class="nx">__FILE__</span><span class="p">),</span> <span class="nx">File</span><span class="p">.</span><span class="nx">expand_path</span><span class="p">(</span><span class="s1">&#39;../cookbooks_local&#39;</span><span class="p">,</span> <span class="nx">__FILE__</span><span class="p">)]</span>
</span><span class='line'><span class="nx">role_path</span> <span class="s2">&quot;#{File.expand_path(&#39;../roles&#39;, __FILE__)}&quot;</span>
</span><span class='line'><span class="nx">log_level</span> <span class="o">:</span><span class="nx">info</span>
</span><span class='line'><span class="nx">log_location</span> <span class="nx">STDOUT</span>
</span><span class='line'><span class="nx">ssl_verify_mode</span> <span class="o">:</span><span class="nx">verify_none</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice the <code>cookbook_path</code> which is provided with an Array containing both the <code>cookbooks</code> and the <code>cookbooks_local</code> directories.</p>

<h3>Time to run</h3>

<p>Assuming you have Chef-Solo installed on the machine you want to run the operations on, you should be good with running:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">cd</span> <span class="o">&lt;</span><span class="nx">your</span><span class="o">-</span><span class="nx">project</span><span class="o">&gt;</span>
</span><span class='line'><span class="nx">cd</span> <span class="nx">machines</span>
</span><span class='line'><span class="p">[</span><span class="nx">sudo</span><span class="p">]</span> <span class="nx">chef</span><span class="o">-</span><span class="nx">solo</span> <span class="o">-</span><span class="nx">c</span> <span class="p">.</span><span class="o">/</span><span class="nx">solo</span><span class="p">.</span><span class="nx">rb</span> <span class="o">-</span><span class="nx">j</span> <span class="p">.</span><span class="o">/</span><span class="nx">operations</span><span class="o">/&lt;</span><span class="nx">operation</span><span class="o">&gt;</span><span class="p">.</span><span class="nx">json</span>
</span></code></pre></td></tr></table></div></figure>


<p>Be sure to have installed the cookbooks before however (see the Librarian paragraph if you don&#8217;t now what to do).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debugging TabBarKit, a barebones kit for custom tab bar on iOS]]></title>
    <link href="http://www.softr.li/blog/2012/05/10/debugging-tabbarkit-a-barebones-kit-for-custom-tab-bar-on-ios/"/>
    <updated>2012-05-10T12:36:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/05/10/debugging-tabbarkit-a-barebones-kit-for-custom-tab-bar-on-ios</id>
    <content type="html"><![CDATA[<p>For our <a href="http://itunes.apple.com/fr/app/cultimots-un-jeu-culture-vocabulaire/id483710651?l=fr&amp;ls=1&amp;mt=8">Cultimots</a> application, I wanted to customize the application&#8217;s tab bar. I looked a little on Google, <a href="http://cocoacontrols.com/">cocoacontrols.com</a>, Github, but I didn&#8217;t want to use a full-featured solution which may not remain configurable for what I add in mind.</p>

<p>I finally went for <strong>TabBarKit</strong>, which is quite barebones, <strong>reproducing the basic features of <code>UITabBar</code></strong> while letting me <strong>play with the code to get my own thing</strong>.</p>

<p>On this way I encountered several time-consuming issues due to the non-existent documentation of TabBarKit and some bugs in the shared code. Since I already customized the code to fit my own project <strong>I won&#8217;t share the updated source code</strong>, I will however share the issues I met and the solutions I found. Hope this will make your path faster than mine!</p>

<!--more -->


<h3>Confusion between tab bar style and tab bar item selection style</h3>

<p>There is a confusion between the tab bar&#8217;s style, which is a <code>TBKTabBarStyle</code>, and the tab bar item selection&#8217;s style, which is a <code>TBKTabBarItemSelectionStyle</code>.</p>

<p>This confusion is explicit in these lines:</p>

<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBarController.m:119</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">TBKTabBarItem</span> <span class="o">*</span><span class="n">tabItem</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">TBKTabBarItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImageName:</span><span class="n">controller</span><span class="p">.</span><span class="n">tabImageName</span> <span class="nl">style:</span><span class="n">self</span><span class="p">.</span><span class="n">tabBarStyle</span> <span class="nl">tag:</span><span class="n">tagIndex</span> <span class="nl">title:</span><span class="n">controller</span><span class="p">.</span><span class="n">title</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBarItem.m:170</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nl">initWithImageName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">anImageName</span> <span class="nl">style:</span><span class="p">(</span><span class="n">TBKTabBarItemSelectionStyle</span><span class="p">)</span><span class="n">aStyle</span> <span class="nl">tag:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">aTag</span> <span class="nl">title:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">aTitle</span> <span class="p">{</span>
</span></code></pre></td></tr></table></div></figure>


<p>The tab bar item <code>init</code> method expects <code>aStyle</code> to be a <code>TBKTabBarItemSelectionStyle</code> but the controller provides its own style, which is a <code>TBKTabBarStyle</code>. This is OK in the source code because in fact the both style are <code>enum</code>s with matching integer values. If you add yours, just be sure to clean this mess.</p>

<h2>Enabling titles</h2>

<p>In the source code from the Github repo, titles are disabled. To restore them, you will have to uncomment some lines from <code>TabBarKit/Classes/TBKTabBarItem.m</code>:</p>

<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBarItem.m:178-188`</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">controllerTitle</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">selectionStyle</span> <span class="o">==</span> <span class="n">TBKTabBarItemDefaultSelectionStyle</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/*</span>
</span><span class='line'><span class="cm">     self.displayTitle = YES;</span>
</span><span class='line'><span class="cm">     self.titleLabel.font = [UIFont boldSystemFontOfSize:10.0];</span>
</span><span class='line'><span class="cm">     self.titleLabel.textAlignment = UITextAlignmentCenter;</span>
</span><span class='line'><span class="cm">     self.titleLabel.contentMode = UIViewContentModeLeft;</span>
</span><span class='line'><span class="cm">     self.imageEdgeInsets = UIEdgeInsetsMake(0, 22, 11, 0);</span>
</span><span class='line'><span class="cm">     self.titleEdgeInsets = UIEdgeInsetsMake(0, -35, 2, 0);</span>
</span><span class='line'><span class="cm">     [self setTitle:self.controllerTitle forState:(UIControlStateNormal | UIControlStateSelected)];</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is also a bug on this line:</p>

<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBarItem.m:186</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">self</span> <span class="nl">setTitle:</span><span class="n">self</span><span class="p">.</span><span class="n">controllerTitle</span> <span class="nl">forState:</span><span class="p">(</span><span class="n">UIControlStateNormal</span> <span class="o">|</span> <span class="n">UIControlStateSelected</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you set the title for both <code>UIControlStateNormal</code> and <code>UIControlStateSelected</code>, it won&#8217;t show up for the tab bar items which are not selected, and their layout will get broken. Just replace the line by this:</p>

<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBarItem.m:186</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">self</span> <span class="nl">setTitle:</span><span class="n">self</span><span class="p">.</span><span class="n">controllerTitle</span> <span class="nl">forState:</span><span class="p">(</span><span class="n">UIControlStateNormal</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Finishing touch</h2>

<h3>Grey titles for the non-selected items</h3>

<p>Update the lines 170 to 175 to have this in <code>TabBarKit/Classes/TBKTabBar.m</code>:</p>

<figure class='code'><figcaption><span>TabBarKit/Classes/TBKTabBar.m:170-175</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">TBKTabBarItem</span> <span class="o">*</span><span class="n">tab</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">items</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">currentBounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">tabMargin</span><span class="p">;</span>
</span><span class='line'>  <span class="n">tab</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">currentBounds</span><span class="p">;</span>
</span><span class='line'>  <span class="n">currentBounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">currentBounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">addSubview:</span><span class="n">tab</span><span class="p">];</span>
</span><span class='line'>  <span class="n">tab</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">grayColor</span><span class="p">];</span> <span class="c1">// added line</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update the <code>setSelected:</code> method in <code>TabBarKit/Classes/TBKTabBarItem.m:213-217</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">sublayers</span> <span class="nl">containsObject:</span><span class="n">self</span><span class="p">.</span><span class="n">selectionLayer</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">selectionLayer</span> <span class="n">removeFromSuperlayer</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">grayColor</span><span class="p">];</span> <span class="c1">// added line</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Your tab bar should already look great! The rest is customization, and it&#8217;s up to you! Have fun!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manually installing a gem from a git repo]]></title>
    <link href="http://www.softr.li/blog/2012/04/22/manually-installing-a-gem-from-a-git-repo/"/>
    <updated>2012-04-22T10:16:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/22/manually-installing-a-gem-from-a-git-repo</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem uninstall gem_name
</span><span class='line'>git clone git://github.com/repo_name/gem_name.git
</span><span class='line'>cd gem_name
</span><span class='line'>gem build gem_name.gemspec
</span><span class='line'>gem install ./&lt;the gem that was compiled&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up log rotation for your web apps]]></title>
    <link href="http://www.softr.li/blog/2012/04/20/setting-up-log-rotation-for-your-web-apps/"/>
    <updated>2012-04-20T10:12:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/20/setting-up-log-rotation-for-your-web-apps</id>
    <content type="html"><![CDATA[<p><span class='pullquote-right' data-pullquote='Just ask yourself this question: did you configure your logs rotation? '>
If, like me, you simply follow the common tutorials and walthroughs to setup your production environment, you may start wondering after some weeks <strong>where this leak on your server&#8217;s disk space is coming from&#8230;</strong></p>

<p>Just ask yourself this question: did you configure your logs rotation?</p>

<p><em>(Well, that was when I was still a young CTO&#8230;)</em>
</span></p>

<!-- more -->


<h2>The ugly</h2>

<p>You&#8217;ve installed your <strong>nginx</strong> server, it proxies some well-coded <strong>Rails</strong> applications served by the nice-and-fast <strong>thin</strong> app server. All good.</p>

<p>But you know, these are verbose people. They like to talk. A lot. And as obedient software, they write every character of their chatter. So this is where your leak is coming from.</p>

<p>As a matter of fact, if you don&#8217;t tell somebody to clean their mess, nobody won&#8217;t&#8230; and you&#8217;re server will soon die of low-disk-space agony.</p>

<h2>The bad</h2>

<p>You will have to tell <code>logrotate</code> to do some work for these guys to keep their chatter under control.</p>

<p><code>logrotate</code> is the cowboy which will rule the land ;) Tell it which log has to be rotated and it will automatically does the job for you. So now, get into this configuration stage&#8230;</p>

<p>The <code>logrotate</code> configuration file should be <code>/etc/logrotate.conf</code>.</p>

<p>You can add your instructions for log rotation by adding the following lines in this file, or you can create a new file under <code>/etc/logrotate.d</code> if you think this is a more organized way (I think). This latter option mimics the way packages configure <code>logrotate</code>. You will find several examples in this directory, so you may just look at them too.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/path/to/your/rails/applicaton/log/*.log {
</span><span class='line'>  daily
</span><span class='line'>  missingok
</span><span class='line'>  rotate 7
</span><span class='line'>  compress
</span><span class='line'>  delaycompress
</span><span class='line'>  notifempty
</span><span class='line'>  copytruncate
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>If you want to force <code>logrotate</code> to run right now instead of waiting until tomorrow to see if your configuration is OK, you can run this command:</p>

<pre><code>/usr/sbin/logrotate -f /etc/logrotate.conf
</code></pre>

<p>Else you can just wait a little.</p>

<h2>The good</h2>

<p>If you got through all this useless blabber about bad guys chatting and cowboys, you&#8217;ll be happy to know that some serious<del>ly boring</del> (no no, just kidding, I don&#8217;t even know him) guy has written a far more efficient tutorial on the subject, and you can find it <a href="http://www.nullislove.com/2007/09/10/rotating-rails-log-files/">here</a>.</p>

<p>This guide will help you understand how <code>logrotate</code> works and the purpose of each line in the code above.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linking local node modules with npm]]></title>
    <link href="http://www.softr.li/blog/2012/04/16/linking-local-node-modules-with-npm/"/>
    <updated>2012-04-16T10:10:00+02:00</updated>
    <id>http://www.softr.li/blog/2012/04/16/linking-local-node-modules-with-npm</id>
    <content type="html"><![CDATA[<p>How to link a <strong>node module</strong> to a <strong>local source directory</strong> instead of installing from npm repository.</p>

<!-- more -->


<h2>Link a module to a local repo</h2>

<p>When you need a fresher version of a module that the one published to npm repository (e.g. if you have your own patch, if new commits haven&#8217;t been released yet), you may want to clone the module locally and have npm use it instead of the published one.</p>

<p>To do this, you <strong>link</strong> your local package.</p>

<pre><code>git clone https://github.com/repo/node-module.git
cd node-module
npm link
</code></pre>

<p><em>You may need to <code>sudo</code> to perform the <code>link</code> command (this is because the link gets installed system-wide, in <code>/usr/local/lib/node_modules</code> on my MacOS X system).</em></p>

<p><strong>Check the log of this command to see on which path npm references the linked module. In my case, the module was named as <code>node-module</code>, but npm was using <code>module</code> for the reference. In this case, be sure to link in your app (next section) using <code>module</code> and not <code>node-module</code>.</strong></p>

<h2>Link this module in your node application</h2>

<p>You will now tell npm to use this linked version of the module for your application:</p>

<pre><code>cd your_application
npm link module
</code></pre>
]]></content>
  </entry>
  
</feed>
